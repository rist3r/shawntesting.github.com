<?xml version="1.0" ?> 
<xsd:schema targetNamespace="urn:mtf:mil:6040b:airsupreq:B.1.01.15" xml:lang="en-US" xmlns="urn:mtf:mil:6040b:airsupreq:B.1.01.15" xmlns:s="urn:mtf:mil:6040b:airsupreq:B.1.01.15:set" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ism="urn:us:gov:ic:ism:v2" xmlns:ddms="http://metadata.dod.mil/mdr/ns/DDMS/2.0/" xmlns:ICISM="urn:us:gov:ic:ism:v2" elementFormDefault="unqualified" attributeFormDefault="unqualified">
 <xsd:import namespace="urn:mtf:mil:6040b:airsupreq:B.1.01.15:set" schemaLocation="sets.xsd" />
 <xsd:import namespace="urn:us:gov:ic:ism:v2" schemaLocation="IC-ISM-v2.xsd" />
 <xsd:annotation>
  <xsd:appinfo>
   <ddms:security ICISM:classification="U" ICISM:ownerProducer="USA" ICISM:nonICmarkings="DIST_STMT_C" />
  </xsd:appinfo>
  <xsd:appinfo>DISTRIBUTION STATEMENT C. Distribution authorized to U.S. Government Agencies and their contractors only for administrative or operational use. Other requests for this document shall be referred to Defense Information Systems Agency Interoperability Directorate. WARNING - This document contains technical data whose export is restricted by the Arms Export Control Act (Title 22, U.S.C., Sec. 2751) or the Export Administration Act of 1979, as amended, Title 50, U.S.C., App. 2401. Violations of these export laws are subject to severe criminal penalties.  Disseminate in accordance with provisions of DOD Directive 5230.25.</xsd:appinfo>
 </xsd:annotation><xsd:element name="AirSupportRequest">
 <xsd:annotation>
  <xsd:documentation>The AIRSUPREQ is used to request preplanned and immediate close air support, interdiction, reconnaissance, surveillance, escort, helicopter airlift, and other aircraft missions.</xsd:documentation>
  <xsd:appinfo>
   <MtfName>AIR SUPPORT REQUEST</MtfName>
   <MtfIdentifier>AIRSUPREQ</MtfIdentifier>
   <MtfIndexReferenceNumber>D670</MtfIndexReferenceNumber>
   <MtfSponsor>USAF/USA</MtfSponsor>
   <MtfPurpose>The AIRSUPREQ is used to request preplanned and immediate close air support, interdiction, reconnaissance, surveillance, escort, helicopter airlift, and other aircraft missions.</MtfPurpose>
   <MtfRelatedDocument>NONE</MtfRelatedDocument>
   <MtfRemark>B.1.01.14 was updated by ICP M2017-04, which updated the ADDITIONAL FRIENDLY FORCES SEGMENT (FYLOC Set), AIR MSN SEGMENT (GNDFRND Set), ISR PRODUCT SEGMENT (POC Set), POC Set, and REF Set.</MtfRemark>
   <MtfNote>The AIRSUPREQ message provides mission details to complying commands. Although this message has a considerable number of sets that are available for use in this message, a limited number of sets will be required in any one message.</MtfNote>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F1 A /AIRSUPREQ/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in MSGID (Set 3) is assigned the value "AIRSUPREQ".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/MessageIdentifier/MessageTextFormatIdentifier))) then 'null' else xsn:or3(  string( /*:AirSupportRequest/MessageIdentifier/MessageTextFormatIdentifier) eq "AIRSUPREQ")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F2 A /MIL-STD-6040(SERIES)/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in MSGID (Set 3) is assigned the value "MIL-STD-6040(SERIES)".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/MessageIdentifier/StandardOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:AirSupportRequest/MessageIdentifier/StandardOfMessageTextFormat) eq "MIL-STD-6040(SERIES)")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F3 A /B.1.01.15/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in MSGID (Set 3) is assigned the value "B.1.01.15".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/MessageIdentifier/VersionOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:AirSupportRequest/MessageIdentifier/VersionOfMessageTextFormat) eq "B.1.01.15")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[4],AF3 R ([4],AF2 EQ /CHT/ | /DOC/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in REF (Set 4) is required if Field 2 in the same REF (Set 4) lexicographically equals "CHT" or "DOC".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/Reference))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/Reference) return xsn:or3(  xsn:not3(   if ( not( exists( /*:AirSupportRequest/Reference[ $A]/CommunicationType/*)) and not( exists( /*:AirSupportRequest/Reference[ $A]/CommunicationType/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:AirSupportRequest/Reference[ $A]/CommunicationType/*/*)) then string-join( /*:AirSupportRequest/Reference[ $A]/CommunicationType/*/*,"") else string( /*:AirSupportRequest/Reference[ $A]/CommunicationType/*)) eq "CHT",  string( if ( exists( /*:AirSupportRequest/Reference[ $A]/CommunicationType/*/*)) then string-join( /*:AirSupportRequest/Reference[ $A]/CommunicationType/*/*,"") else string( /*:AirSupportRequest/Reference[ $A]/CommunicationType/*)) eq "DOC")),  if ( not( exists( /*:AirSupportRequest/Reference[ $A]))) then 'null' else  count( /*:AirSupportRequest/Reference[ $A]/InformationProduct) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[9]F5 RP ([9S],A[9]F2 EQ /G/*)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in MSNREQ (Set 9) in MSNREQ (Segment 9) is required if Field 2 in MSNREQ (Set 9) in the same MSNREQ (Segment 9) lexicographically equals "G"* otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/MissionRequestInformation/PrimaryMissionType))) then 'null' else xsn:or3(  starts-with( string( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/MissionRequestInformation/PrimaryMissionType), "G"))  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/MissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/MissionRequestInformation/AlertStatus) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/MissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/MissionRequestInformation/AlertStatus) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[10]FG,ZF7 @= 1 ([9S],A[10..16S],B[10]F6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 7 in the Field Group in AMSNLOC (Set 10) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) must occur exactly 1 time if Field 6 in AMSNLOC (Set 10) in the same Segment which can start with AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftMissionLocation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftMissionLocation/AreaGeometry) != 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftMissionLocation))) then false() else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftMissionLocation/GroupOfFields/Location) = 1  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[11]F2 R ([9S],A[10..16S],B[11]F1 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in GTGTREQ (Set 11) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 1 in GTGTREQ (Set 11) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation/TimeOnTarget) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation/NotEarlierThanDayTimeAndMonth) != 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[11]F3 R ([9S],A[10..16S],B[11]F1 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in GTGTREQ (Set 11) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 1 in GTGTREQ (Set 11) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation/TimeOnTarget) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation/NltTime) != 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[11]F16 RP ([9S],A[10..16S],B[11]F14 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 16 in GTGTREQ (Set 11) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 14 in GTGTREQ (Set 11) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation/TargetHeading) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation/SpeedOfMovement) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation/SpeedOfMovement) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[12]F2 R ([9S],A[10..16S],B[12]F1 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in SPTGTREQ (Set 12) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 1 in SPTGTREQ (Set 12) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ShipTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ShipTargetRequestInformation/DayTimeOnTarget) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ShipTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ShipTargetRequestInformation/NotEarlierThanDayTimeAndMonth) != 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[12]F3 R ([9S],A[10..16S],B[12]F1 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in SPTGTREQ (Set 12) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 1 in SPTGTREQ (Set 12) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ShipTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ShipTargetRequestInformation/DayTimeOnTarget) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ShipTargetRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ShipTargetRequestInformation/NltTime) != 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[14]F11 P ([9S],A[10..16S],B[14]F10 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 11 in ESCDAT (Set 14) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if Field 10 in ESCDAT (Set 14) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/EscortMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/EscortMissionRequestInformation/PrimaryContactMethod) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/EscortMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/EscortMissionRequestInformation/SecondaryContactMethod) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[16]F3 R ([9S],A[10..16S],B[16]F2 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in RECCDAT (Set 16) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 2 in RECCDAT (Set 16) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation/DayTimeAndMonthOverTarget) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation/NetTime) != 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[16]F4 R ([9S],A[10..16S],B[16]F2 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in RECCDAT (Set 16) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 2 in RECCDAT (Set 16) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation/DayTimeAndMonthOverTarget) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation/NltTime) != 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[16]F10 RP ([9S],A[10..16S],B[16]F9 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 10 in RECCDAT (Set 16) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 9 in RECCDAT (Set 16) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation/ImageType) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation/ImageQualifier) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation/ImageQualifier) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[18],Z P ([9S],A[10..16S],B[11] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Every DMPI (Set 18) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if GTGTREQ (Set 11) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DmpiDescriptionInformation) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[18],CF6 P ([9S],A[10..16S],B[18],CF5 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in DMPI (Set 18) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if Field 5 in the same DMPI (Set 18) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DmpiDescriptionInformation))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DmpiDescriptionInformation) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DmpiDescriptionInformation[ $C]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DmpiDescriptionInformation[ $C]/DesiredMeanPointOfImpactElevationInFeetOrMeters) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DmpiDescriptionInformation[ $C]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DmpiDescriptionInformation[ $C]/ProbableCoordinateElevationLinearError) = 0  ))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[19] P ([9S],A[10..16S],B[11] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>GTGTAREA (Set 19) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if GTGTREQ (Set 11) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetArea) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[19]FG,ZF5 @= 1 ([9S],A[10..16S],B[19]F4 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in the Field Group in GTGTAREA (Set 19) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) must occur exactly 1 time if Field 4 in GTGTAREA (Set 19) in the same Segment which can start with AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetArea))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetArea/AreaGeometry) != 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetArea))) then false() else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetArea/GroupOfFields/AreaCoordinatesOrOrigin) = 1  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[20] P ([9S],A[10..16S],B[11] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>GENTEXT (Set 20) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if GTGTREQ (Set 11) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GeneralText_1) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],Z[10..16S],Z[20]F1 A /GROUND TARGET COMMENTS/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in GENTEXT (Set 20) in every Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is assigned the value "GROUND TARGET COMMENTS".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $expr_1_1 in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $expr_1_2 in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $expr_1_2]/GeneralText_1/TextIndicator))) then 'null' else xsn:or3(  string( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $expr_1_2]/GeneralText_1/TextIndicator) eq "GROUND TARGET COMMENTS")))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[21] P ([9S],A[10..16S],B[11] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>PGMINFO (Set 21) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if GTGTREQ (Set 11) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/PrecisionGuidedMunitionsInformation) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[22S],N RP ([9S],A[10..16S],B[16] @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>At least one occurrence of PTRCPLOT (Segment 22) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if RECCDAT (Set 16) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ReconnaissanceMissionRequestInformation) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot]) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot]) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[22S],C[25]F5 RP ([9S],A[10..16S],B[22S],C[25]F4 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in IMDALNK (Set 25) in PTRCPLOT (Segment 22) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 4 in IMDALNK (Set 25) in the same PTRCPLOT (Segment 22) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot]))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot][ $C]/ImageryDataLinkInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot][ $C]/ImageryDataLinkInformation/LinkStartDayTime) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot][ $C]/ImageryDataLinkInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot][ $C]/ImageryDataLinkInformation/LinkStopDayTime) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot][ $C]/ImageryDataLinkInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/IsrDetailsSegment[PositionTracePlot][ $C]/ImageryDataLinkInformation/LinkStopDayTime) = 0 )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[26] P ([9S],A[10..16S],B[10] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>AIREFUEL (Set 26) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if AMSNLOC (Set 10) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftMissionLocation) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AirRefuelingReceiverInformation) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[27] P ([9S],A[10..16S],B[10] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>REFLINFO (Set 27) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if AMSNLOC (Set 10) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftMissionLocation) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/RefuelingRequestInformation) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[28] P ([9S],A[10..16S],B[15] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>LANDSITE (Set 28) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if AIRTRREQ (Set 15) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AirTransportationRequirement) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[28]F6 RP ([9S],A[10..16S],B[28]F5 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in LANDSITE (Set 28) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 5 in LANDSITE (Set 28) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/LandingSiteActionStatus) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/AsOfDayTime) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/AsOfDayTime) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[28]F8 RP ([9S],A[10..16S],B[28]F7 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 8 in LANDSITE (Set 28) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 7 in LANDSITE (Set 28) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/MethodOfMarkingFriendlyPositions) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/Color) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/Color) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[28]FG,CF11 P ([9S],A[10..16S],B[28]FG,CF10 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 11 in the Field Group in LANDSITE (Set 28) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if Field 10 in the same Field Group in LANDSITE (Set 28) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/GroupOfFields))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/GroupOfFields[ $C]/PrimaryFrequencyOrPhone) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/LandingSiteRequestInformation/GroupOfFields[ $C]/SecondaryFrequencyOrPhone) = 0  ))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[29] P ([9S],A[10..16S],B[15] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>AIRDROP (Set 29) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if AIRTRREQ (Set 15) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AirTransportationRequirement) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DropZone) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[29]F7 RP ([9S],A[10..16S],B[29]F6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 7 in AIRDROP (Set 29) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 6 in AIRDROP (Set 29) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DropZone))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/*:DropZone/DropZoneLengthInMeters) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DropZone))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/*:DropZone/DropZoneWidthInMeters) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DropZone))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/*:DropZone/DropZoneWidthInMeters) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[29]F9 RP ([9S],A[10..16S],B[29]F8 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 9 in AIRDROP (Set 29) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 8 in AIRDROP (Set 29) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DropZone))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/*:DropZone/MarkingMethod) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DropZone))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/*:DropZone/MarkingColor) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/DropZone))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/*:DropZone/MarkingColor) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[30] P ([9S],A[10..16S],B[15] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>CARGO (Set 30) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if AIRTRREQ (Set 15) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AirTransportationRequirement) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AirliftCargoRerquirements) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[31S],C[31]FG,DF11 RP ([9S],A[10..16S],B[31S],C[31]FG,DF10 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 11 in the Field Group in RDZVBKUP (Set 31) in RDZVBKUP (Segment 31) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 10 in the Field Group in RDZVBKUP (Set 31) in the same RDZVBKUP (Segment 31) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData]))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData/GroupOfFields))) then 'null' else xsn:and3( for $D in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData/GroupOfFields) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData/GroupOfFields[ $D]/NumberOfAircraft) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData/GroupOfFields[ $D]/AircraftType) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData/GroupOfFields[ $D]/AircraftType) = 0 ))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[31S],C[32] P ([9S],A[10..16S],B[31S],C[31]F2 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>RDZAREA (Set 32) in RDZVBKUP (Segment 31) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if Field 2 in the RDZVBKUP (Set 31) in the same RDZVBKUP (Segment 31) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData]))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupRequestData/RendezvousBreakupLocation) != 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupArea) = 0  ))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[31S],C[32]FG,ZF5 @= 1 ([9S],A[10..16S],B[31S],C[32]F4 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in the Field Group in RDZAREA (Set 32) in RDZVBKUP (Segment 31) the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) must occur exactly 1 time if Field 4 in RDZAREA (Set 32) in the RDZVBKUP (Segment 31) in the same Segment which can start with AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData]))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupArea))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupArea/AreaGeometry) != 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupArea))) then false() else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftRendezvousBreakupRequestSegment[AircraftRendezvousOrBreakupRequestData][ $C]/AircraftRendezvousOrBreakupArea/GroupOfFields/AreaCoordinatesOrOrigin) = 1  ))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[34],CF5 = FF110-1 ([9S],A[10..16S],B[34],CF4 = FF110-1)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in EWDATA (Set 34) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) must use the alternative RADIO FREQUENCY (FF110-1) if Field 4 in the same EWDATA (Set 34) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) uses the alternative RADIO FREQUENCY (FF110-1).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData[ $C]/LowerFrequency))) then 'null' else xsn:or3(  exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData[ $C]/LowerFrequency/RadioFrequency))  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData[ $C]/UpperFrequency))) then 'null' else xsn:or3(  exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData[ $C]/UpperFrequency/RadioFrequency))))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[34],CF5 = FF1528-3 ([9S],A[10..16S],B[34],CF4 = FF1528-2)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in EWDATA (Set 34) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) must use the alternative UPPER FREQUENCY IN PULSES PER SECOND (FF1528-3) if Field 4 in the same EWDATA (Set 34) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) uses the alternative LOWER FREQUENCY IN PULSES PER SECOND (FF1528-2).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData[ $C]/LowerFrequency))) then 'null' else xsn:or3(  exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData[ $C]/LowerFrequency/LowerFrequencyInPulsesPerSecond))  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData[ $C]/UpperFrequency))) then 'null' else xsn:or3(  exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ElectronicWarfareEmitterOrJammingData[ $C]/UpperFrequency/UpperFrequencyInPulsesPerSecond))))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[36]F4 RP ([9S],A[10..16S],B[36]F3 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in CHAFFRQ (Set 36) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 3 in CHAFFRQ (Set 36) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements/LowerElectronicAttackFrequency) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements/UpperElectronicAttackFrequency) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements/UpperElectronicAttackFrequency) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[36]F6 RP ([9S],A[10..16S],B[36]F5 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in CHAFFRQ (Set 36) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 5 in CHAFFRQ (Set 36) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements/BoundaryLowerLimitFlightLevel) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements/BoundaryUpperLimitFlightLevel) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ChaffRequirements/BoundaryUpperLimitFlightLevel) = 0 ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[38],Z P ([9S],A[10..16S],B[11] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Every FACSCD (Set 38) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if GTGTREQ (Set 11) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundTargetRequestInformation) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/ForwardAirControllerAircraftSchedule) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[39] P ([9S],A[10..16S],B[10] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>AUTOCTRQ (Set 39) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is prohibited if AMSNLOC (Set 10) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AircraftMissionLocation) = 0  ),  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/AirborneRadioRelayStationRequirements) = 0  )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],Z[10..16S],Z[40]F1 A /RESULTS/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in GENTEXT (Set 40) in every Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in every MSNREQ (Segment 9) is assigned the value "RESULTS".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $expr_1_1 in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $expr_1_2 in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $expr_1_2]/GeneralText_2/TextIndicator))) then 'null' else xsn:or3(  string( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $expr_1_2]/GeneralText_2/TextIndicator) eq "RESULTS")))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],Z[10..16S],Z[41]F1 A /RATIONALE/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in GENTEXT (Set 41) in every Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in every MSNREQ (Segment 9) is assigned the value "RATIONALE".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $expr_1_1 in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $expr_1_2 in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $expr_1_2]/GeneralText_3/TextIndicator))) then 'null' else xsn:or3(  string( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $expr_1_1]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $expr_1_2]/GeneralText_3/TextIndicator) eq "RATIONALE")))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9S],A[10..16S],B[42],CF7 RP ([9S],A[10..16S],B[42],CF6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 7 in GNDFRND (Set 42) in the Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in MSNREQ (Segment 9) is required if Field 6 in the same GNDFRND (Set 42) in the same Segment which can start with the AMSNLOC-RECCDAT (Sets 10-16) in the same MSNREQ (Segment 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]))) then 'null' else xsn:and3( for $B in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation]) return if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundLocationOfFriendlyTroops))) then 'null' else xsn:and3( for $C in 1 to count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundLocationOfFriendlyTroops) return for $cond in if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundLocationOfFriendlyTroops[ $C]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundLocationOfFriendlyTroops[ $C]/FriendlyPositionsMarkingMethod) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundLocationOfFriendlyTroops[ $C]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundLocationOfFriendlyTroops[ $C]/MarkingColor) != 0  else  if ( not( exists( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundLocationOfFriendlyTroops[ $C]))) then 'null' else  count( /*:AirSupportRequest/AirMsnRequestSegment[MissionRequestInformation][ $A]/AirMsnSegment[AircraftMissionLocation or GroundTargetRequestInformation or ShipTargetRequestInformation or ContiguousMissionRepositioningInformation or EscortMissionRequestInformation or AirTransportationRequirement or ReconnaissanceMissionRequestInformation][ $B]/GroundLocationOfFriendlyTroops[ $C]/MarkingColor) = 0 )))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[49] RP ([3]F10 EQ /CONFIDENTIAL/ | /SECRET/ | /TOP SECRET/ | /RESTRICTED/ | /NATO RESTRICTED/ | /NATO CONFIDENTIAL/ | /NATO SECRET/ | /NATO SECRET-SAVATE/ | /NATO SECRET-AVICULA/ | /COSMIC TOP SECRET/ | /COSMIC TOP SECRET-BOHEMIA/ | /COSMIC TOP SECRET-BALK/ | /COSMIC TOP SECRET ATOMAL/ | /NATO SECRET ATOMAL/ | /NATO CONFIDENTIAL ATOMAL/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>DECL (Set 49) is required if Field 10 in MSGID (SET 3) lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL" otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in  if ( not( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) and not( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "CONFIDENTIAL",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "SECRET",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "TOP SECRET",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "RESTRICTED",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO RESTRICTED",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-SAVATE",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-AVICULA",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BOHEMIA",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BALK",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET ATOMAL",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET ATOMAL",  string( if ( exists( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirSupportRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL ATOMAL")  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  count( /*:AirSupportRequest/MessageDowngradingOrDeclassificationData) != 0  else  count( /*:AirSupportRequest/MessageDowngradingOrDeclassificationData) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[49]F2 RP ([49]F1 = FF679-4)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in DECL (Set 49) is required if Field 1 in DECL (Set 49) uses alternative ORIGINAL CLASSIFICATION AUTHORITY (FF679-4) otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in if ( not( exists( /*:AirSupportRequest/MessageDowngradingOrDeclassificationData/SourceForClassification))) then 'null' else xsn:or3(  exists( /*:AirSupportRequest/MessageDowngradingOrDeclassificationData/SourceForClassification/OriginalClassificationAuthority))  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirSupportRequest/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:AirSupportRequest/MessageDowngradingOrDeclassificationData/ReasonForClassification) != 0  else  if ( not( exists( /*:AirSupportRequest/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:AirSupportRequest/MessageDowngradingOrDeclassificationData/ReasonForClassification) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <VersionIndicator>B.1.01.15</VersionIndicator>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence><xsd:choice minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:appinfo>
   <AlternativeType>Mutually Exclusive, None Required</AlternativeType>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:element name="ExerciseIdentification" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The EXER set provides the designated code name or nickname, if the message supports an exercise.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>EXERCISE IDENTIFICATION</SetFormatPositionName>
    <SetFormatPositionNumber>1</SetFormatPositionNumber>
    <SetFormatPositionConcept>The EXER set provides the designated code name or nickname, if the message supports an exercise.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:ExerciseIdentificationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="1" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="OperationIdentificationData" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The OPER set provides the designated code name or nickname, if the message supports an operation.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>OPERATION IDENTIFICATION DATA</SetFormatPositionName>
    <SetFormatPositionNumber>2</SetFormatPositionNumber>
    <SetFormatPositionConcept>The OPER set provides the designated code name or nickname, if the message supports an operation.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:OperationIdentificationDataType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="2" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
</xsd:choice>

<xsd:element name="MessageIdentifier" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The MSGID set provides the message identification and originator.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE IDENTIFIER</SetFormatPositionName>
   <SetFormatPositionNumber>3</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MSGID set provides the message identification and originator.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageIdentifierType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="3" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Reference" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The REF set provides both USMTF and non-USMTF references.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>REFERENCE</SetFormatPositionName>
   <SetFormatPositionNumber>4</SetFormatPositionNumber>
   <SetFormatPositionConcept>The REF set provides both USMTF and non-USMTF references.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ReferenceType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="4" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="MessageCancellationWithNewInformationProvided" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The CANX set cancels the AIRSUPREQ message and provides new information. If a facility wants to cancel a message and not provide new information, the MSGCORRCANX message should be used.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE CANCELLATION WITH NEW INFORMATION PROVIDED</SetFormatPositionName>
   <SetFormatPositionNumber>5</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CANX set cancels the AIRSUPREQ message and provides new information. If a facility wants to cancel a message and not provide new information, the MSGCORRCANX message should be used.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageCancellationWithNewInformationProvidedType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="5" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="PeriodOfTime" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The PERIOD set indicates when the information in the AIRSUPREQ is effective.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>PERIOD OF TIME</SetFormatPositionName>
   <SetFormatPositionNumber>6</SetFormatPositionNumber>
   <SetFormatPositionConcept>The PERIOD set indicates when the information in the AIRSUPREQ is effective.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:PeriodOfTimeType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="6" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GeodeticDatum" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GEODATUM set provides the default geodetic datum for the AIRSUPREQ. If required, the default geodetic datum can be overridden for a particular mission by specifying a separate geodetic datum for that mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GEODETIC DATUM</SetFormatPositionName>
   <SetFormatPositionNumber>7</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GEODATUM set provides the default geodetic datum for the AIRSUPREQ. If required, the default geodetic datum can be overridden for a particular mission by specifying a separate geodetic datum for that mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GeodeticDatumType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="7" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="PointOfContactInformation_1" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The POC set provides a point of contact for the AIRSUPREQ.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>POINT OF CONTACT INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>8</SetFormatPositionNumber>
   <SetFormatPositionConcept>The POC set provides a point of contact for the AIRSUPREQ.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:PointOfContactInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="8" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="AirMsnRequestSegment" minOccurs="1" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The sets MSNREQ through PROTFREQ form a MANDATORY SEGMENT to request multiple missions.</xsd:documentation>
  <xsd:appinfo>
   <SegmentStructureName>AIR MSN REQUEST SEGMENT</SegmentStructureName>
   <SegmentStructureConcept />
   <SegmentStructureUseDescription>The sets MSNREQ through PROTFREQ form a MANDATORY SEGMENT to request multiple missions.</SegmentStructureUseDescription>
   <InitialSetFormatPosition>9</InitialSetFormatPosition>
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
   <VersionIndicator />
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence>

<xsd:element name="MissionRequestInformation" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The MSNREQ set provides requested tasking information for air missions.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MISSION REQUEST INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>9</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MSNREQ set provides requested tasking information for air missions.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MissionRequestInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="9" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="AirMsnSegment" minOccurs="1" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The sets AMSNLOC, GTGTREQ, SPTGTREQ, RESPOSTN, ESCDAT, AIRTRREQ, or RECCDAT through PROTFREQ form a MANDATORY NESTED SEGMENT to request multiple mission types.</xsd:documentation>
  <xsd:appinfo>
   <SegmentStructureName>AIR MSN SEGMENT</SegmentStructureName>
   <SegmentStructureConcept />
   <SegmentStructureUseDescription>The sets AMSNLOC, GTGTREQ, SPTGTREQ, RESPOSTN, ESCDAT, AIRTRREQ, or RECCDAT through PROTFREQ form a MANDATORY NESTED SEGMENT to request multiple mission types.</SegmentStructureUseDescription>
   <InitialSetFormatPosition>10</InitialSetFormatPosition>
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
   <VersionIndicator />
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:appinfo>
   <AlternativeType>Mutually Exclusive, One Required</AlternativeType>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:element name="AircraftMissionLocation" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The AMSNLOC set provides mission location information for missions which have no specific target location, e.g., orbits, alert.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>AIRCRAFT MISSION LOCATION</SetFormatPositionName>
    <SetFormatPositionNumber>10</SetFormatPositionNumber>
    <SetFormatPositionConcept>The AMSNLOC set provides mission location information for missions which have no specific target location, e.g., orbits, alert.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:AircraftMissionLocationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="10" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="GroundTargetRequestInformation" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The GTGTREQ set provides the target location and description.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>GROUND TARGET REQUEST INFORMATION</SetFormatPositionName>
    <SetFormatPositionNumber>11</SetFormatPositionNumber>
    <SetFormatPositionConcept>The GTGTREQ set provides the target location and description.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:GroundTargetRequestInformationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="11" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="ShipTargetRequestInformation" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The SPTGTREQ set provides ship target data for the requested mission.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>SHIP TARGET REQUEST INFORMATION</SetFormatPositionName>
    <SetFormatPositionNumber>12</SetFormatPositionNumber>
    <SetFormatPositionConcept>The SPTGTREQ set provides ship target data for the requested mission.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:ShipTargetRequestInformationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="12" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="ContiguousMissionRepositioningInformation" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The REPOSTN set provides aircraft repositioning details.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>CONTIGUOUS MISSION REPOSITIONING INFORMATION</SetFormatPositionName>
    <SetFormatPositionNumber>13</SetFormatPositionNumber>
    <SetFormatPositionConcept>The REPOSTN set provides aircraft repositioning details.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:ContiguousMissionRepositioningInformationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="13" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="EscortMissionRequestInformation" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The ESCDAT set provides escort details for requested escort mission.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>ESCORT MISSION REQUEST INFORMATION</SetFormatPositionName>
    <SetFormatPositionNumber>14</SetFormatPositionNumber>
    <SetFormatPositionConcept>The ESCDAT set provides escort details for requested escort mission.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:EscortMissionRequestInformationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="14" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="AirTransportationRequirement" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The AIRTRREQ set provides requested airlift transportation requirements.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>AIR TRANSPORTATION REQUIREMENT</SetFormatPositionName>
    <SetFormatPositionNumber>15</SetFormatPositionNumber>
    <SetFormatPositionConcept>The AIRTRREQ set provides requested airlift transportation requirements.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:AirTransportationRequirementType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="15" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="ReconnaissanceMissionRequestInformation" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The RECCDAT set provides the reconnaissance requesting data.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>RECONNAISSANCE MISSION REQUEST INFORMATION</SetFormatPositionName>
    <SetFormatPositionNumber>16</SetFormatPositionNumber>
    <SetFormatPositionConcept>The RECCDAT set provides the reconnaissance requesting data.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:ReconnaissanceMissionRequestInformationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="16" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
</xsd:choice>

<xsd:element name="RequestedAircraft" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The REQACFT set identifies the individual aircraft type requested for the mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>REQUESTED AIRCRAFT</SetFormatPositionName>
   <SetFormatPositionNumber>17</SetFormatPositionNumber>
   <SetFormatPositionConcept>The REQACFT set identifies the individual aircraft type requested for the mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RequestedAircraftType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="17" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="DmpiDescriptionInformation" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The DMPI set provides identifying, descriptive and location information concerning the desired mean point of impact.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>DMPI DESCRIPTION INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>18</SetFormatPositionNumber>
   <SetFormatPositionConcept>The DMPI set provides identifying, descriptive and location information concerning the desired mean point of impact.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The DMPI set is PROHIBITED if the GTGTREQ set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:DmpiDescriptionInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="18" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GroundTargetArea" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GTGTAREA set specifies the area to attack when specifying a point or location name is not sufficient or desirable.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GROUND TARGET AREA</SetFormatPositionName>
   <SetFormatPositionNumber>19</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GTGTAREA set specifies the area to attack when specifying a point or location name is not sufficient or desirable.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The GTGTAREA set is PROHIBITED if the GTGTREQ set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GroundTargetAreaType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="19" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GeneralText_1" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GENTEXT/GROUND TARGET COMMENTS set provides additional comments concerning ground targets.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GENERAL TEXT</SetFormatPositionName>
   <SetFormatPositionNumber>20</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GENTEXT/GROUND TARGET COMMENTS set provides additional comments concerning ground targets.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>Field 1 of the GENTEXT set must equal "GROUND TARGET COMMENTS".</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GeneralTextType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="20" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="PrecisionGuidedMunitionsInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The PGMINFO set provides data for the use of precision guided munitions.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>PRECISION GUIDED MUNITIONS INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>21</SetFormatPositionNumber>
   <SetFormatPositionConcept>The PGMINFO set provides data for the use of precision guided munitions.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The PGMINFO set is PROHIBITED if the GTGTREQ set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:PrecisionGuidedMunitionsInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="21" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="IsrDetailsSegment" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The sets PTRCPLOT through IMDALNK form a CONDITIONAL NESTED SEGMENT to provide multiple reconnaissance mission locations.
The Segment beginning with the PTRCPLOT set is REQUIRED if the RECCDAT set is used, otherwise the Segment beginning with the PTRCPLOT set is PROHIBITED.</xsd:documentation>
  <xsd:appinfo>
   <SegmentStructureName>ISR DETAILS SEGMENT</SegmentStructureName>
   <SegmentStructureConcept />
   <SegmentStructureUseDescription>The sets PTRCPLOT through IMDALNK form a CONDITIONAL NESTED SEGMENT to provide multiple reconnaissance mission locations.
The Segment beginning with the PTRCPLOT set is REQUIRED if the RECCDAT set is used, otherwise the Segment beginning with the PTRCPLOT set is PROHIBITED.</SegmentStructureUseDescription>
   <InitialSetFormatPosition>22</InitialSetFormatPosition>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
   <VersionIndicator />
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence>

<xsd:element name="PositionTracePlot" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The PTRCPLOT set provides information concerning the reconnaissance mission location.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>POSITION TRACE PLOT</SetFormatPositionName>
   <SetFormatPositionNumber>22</SetFormatPositionNumber>
   <SetFormatPositionConcept>The PTRCPLOT set provides information concerning the reconnaissance mission location.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:PositionTracePlotType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="22" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="IsrProductSegment" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The sets PRODUCT through POC form an OPERATIONALLY DETERMINED SEGMENT to report multiple reconnaissance products for a reconnaissance mission.</xsd:documentation>
  <xsd:appinfo>
   <SegmentStructureName>ISR PRODUCT SEGMENT</SegmentStructureName>
   <SegmentStructureConcept />
   <SegmentStructureUseDescription>The sets PRODUCT through POC form an OPERATIONALLY DETERMINED SEGMENT to report multiple reconnaissance products for a reconnaissance mission.</SegmentStructureUseDescription>
   <InitialSetFormatPosition>23</InitialSetFormatPosition>
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
   <VersionIndicator />
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence>

<xsd:element name="IntelligenceProduct" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The PRODUCT set provides the technical specifications required for a reconnaissance mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>INTELLIGENCE PRODUCT</SetFormatPositionName>
   <SetFormatPositionNumber>23</SetFormatPositionNumber>
   <SetFormatPositionConcept>The PRODUCT set provides the technical specifications required for a reconnaissance mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:IntelligenceProductType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="23" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="PointOfContactInformation_2" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The POC set provides a point of contact for the reconnaissance products.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>POINT OF CONTACT INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>24</SetFormatPositionNumber>
   <SetFormatPositionConcept>The POC set provides a point of contact for the reconnaissance products.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:PointOfContactInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="24" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="segSeq" type="xsd:unsignedShort" fixed="23" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element>

<xsd:element name="ImageryDataLinkInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The IMDALNK set specifies the technical information required to establish and maintain the imagery data link.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>IMAGERY DATA LINK INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>25</SetFormatPositionNumber>
   <SetFormatPositionConcept>The IMDALNK set specifies the technical information required to establish and maintain the imagery data link.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ImageryDataLinkInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="25" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="segSeq" type="xsd:unsignedShort" fixed="22" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element>

<xsd:element name="AirRefuelingReceiverInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AIREFUEL set provides the receiver aircraft refueling information.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR REFUELING RECEIVER INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>26</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AIREFUEL set provides the receiver aircraft refueling information.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The AIREFUEL set is PROHIBITED if the AMSNLOC set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirRefuelingReceiverInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="26" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="RefuelingRequestInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The REFLINFO set provides the refueling information for the refueling tanker aircraft.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>REFUELING REQUEST INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>27</SetFormatPositionNumber>
   <SetFormatPositionConcept>The REFLINFO set provides the refueling information for the refueling tanker aircraft.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The REFLINFO set is PROHIBITED if the AMSNLOC set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RefuelingRequestInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="27" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="LandingSiteRequestInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The LANDSITE set provides landing site and point of contact information for a designated landing site.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>LANDING SITE REQUEST INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>28</SetFormatPositionNumber>
   <SetFormatPositionConcept>The LANDSITE set provides landing site and point of contact information for a designated landing site.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The LANDSITE set is PROHIBITED if the AMSNLOC set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:LandingSiteRequestInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="28" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="DropZone" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AIRDROP set provides information for requesting airdrop missions. Identify any significant obstructions within five kilometers of the drop zone in an accompanying free text set.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>DROP ZONE</SetFormatPositionName>
   <SetFormatPositionNumber>29</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AIRDROP set provides information for requesting airdrop missions. Identify any significant obstructions within five kilometers of the drop zone in an accompanying free text set.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The AIRDROP set is PROHIBITED if the AMSNLOC set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:DropZoneType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="29" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirliftCargoRequirements" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The CARGO set provides cargo and/or passenger information.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRLIFT CARGO REQUIREMENTS</SetFormatPositionName>
   <SetFormatPositionNumber>30</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CARGO set provides cargo and/or passenger information.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The CARGO set is PROHIBITED if the AIRTRREQ set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirliftCargoRequirementsType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="30" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="AircraftRendezvousBreakupRequestSegment" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The sets RDZVBKUP through RDZAREA form an OPERATIONALLY DETERMINED SEGMENT to request multiple aircraft mission breakups.</xsd:documentation>
  <xsd:appinfo>
   <SegmentStructureName>AIRCRAFT RENDEZVOUS BREAKUP REQUEST SEGMENT</SegmentStructureName>
   <SegmentStructureConcept />
   <SegmentStructureUseDescription>The sets RDZVBKUP through RDZAREA form an OPERATIONALLY DETERMINED SEGMENT to request multiple aircraft mission breakups.</SegmentStructureUseDescription>
   <InitialSetFormatPosition>31</InitialSetFormatPosition>
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
   <VersionIndicator />
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence>

<xsd:element name="AircraftRendezvousOrBreakupRequestData" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The RDZVBKUP set provides information for the rendezvous or subsequent breakup of a group of tasked aircraft.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRCRAFT RENDEZVOUS OR BREAKUP REQUEST DATA</SetFormatPositionName>
   <SetFormatPositionNumber>31</SetFormatPositionNumber>
   <SetFormatPositionConcept>The RDZVBKUP set provides information for the rendezvous or subsequent breakup of a group of tasked aircraft.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AircraftRendezvousOrBreakupRequestDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="31" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AircraftRendezvousOrBreakupArea" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The RDZAREA set specifies the area in which a rendezvous or breakup will occur when specifying a point is not sufficient or desirable.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRCRAFT RENDEZVOUS OR BREAKUP AREA</SetFormatPositionName>
   <SetFormatPositionNumber>32</SetFormatPositionNumber>
   <SetFormatPositionConcept>The RDZAREA set specifies the area in which a rendezvous or breakup will occur when specifying a point is not sufficient or desirable.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The RDZAREA set is PROHIBITED if Field 2 in the RDZVBKUP set is used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AircraftRendezvousOrBreakupAreaType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="32" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="segSeq" type="xsd:unsignedShort" fixed="31" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element>

<xsd:element name="AircraftRouteInformation" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The ACROUTE set describes the route of the mission. This set generally applies to the route escorted aircraft or vehicles will follow; however, it can apply to other missions such as airlift. The requesting agency will designate a specific route only when many flights are involved in a mission requiring precise coordination and timing or when other tactical considerations make it necessary.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRCRAFT ROUTE INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>33</SetFormatPositionNumber>
   <SetFormatPositionConcept>The ACROUTE set describes the route of the mission. This set generally applies to the route escorted aircraft or vehicles will follow; however, it can apply to other missions such as airlift. The requesting agency will designate a specific route only when many flights are involved in a mission requiring precise coordination and timing or when other tactical considerations make it necessary.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AircraftRouteInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="33" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ElectronicWarfareEmitterOrJammingData" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The EWDATA set provides information for Electronic Support (ES) or Electronic Attack (EA) missions being requested.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ELECTRONIC WARFARE EMITTER OR JAMMING DATA</SetFormatPositionName>
   <SetFormatPositionNumber>34</SetFormatPositionNumber>
   <SetFormatPositionConcept>The EWDATA set provides information for Electronic Support (ES) or Electronic Attack (EA) missions being requested.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ElectronicWarfareEmitterOrJammingDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="34" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AntiRadiationMissileData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The ARMDATA set provides aircraft attacking enemy Surface-to-Air Weapons (SAW) with additional information about the target's weapon system and emitter.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ANTI-RADIATION MISSILE DATA</SetFormatPositionName>
   <SetFormatPositionNumber>35</SetFormatPositionNumber>
   <SetFormatPositionConcept>The ARMDATA set provides aircraft attacking enemy Surface-to-Air Weapons (SAW) with additional information about the target's weapon system and emitter.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AntiRadiationMissileDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="35" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ChaffRequirements" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The CHAFFRQ set provides data for a requested chaff mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>CHAFF REQUIREMENTS</SetFormatPositionName>
   <SetFormatPositionNumber>36</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CHAFFRQ set provides data for a requested chaff mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ChaffRequirementsType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="36" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="EmissionControlInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The EMCON set identifies special Emission Control (EMCON) procedures or conditions used during the mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>EMISSION CONTROL INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>37</SetFormatPositionNumber>
   <SetFormatPositionConcept>The EMCON set identifies special Emission Control (EMCON) procedures or conditions used during the mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:EmissionControlInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="37" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ForwardAirControllerAircraftSchedule" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The FACSCD set provides the Forward Air Controller (FAC) with a schedule of the mission aircraft that are to be controlled.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>FORWARD AIR CONTROLLER AIRCRAFT SCHEDULE</SetFormatPositionName>
   <SetFormatPositionNumber>38</SetFormatPositionNumber>
   <SetFormatPositionConcept>The FACSCD set provides the Forward Air Controller (FAC) with a schedule of the mission aircraft that are to be controlled.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The FACSCD set is PROHIBITED if the GTGTREQ set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ForwardAirControllerAircraftScheduleType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="38" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirborneRadioRelayStationRequirements" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AUTOCTRQ set provides airborne relay stations with their transmit and receive frequencies.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRBORNE RADIO RELAY STATION REQUIREMENTS</SetFormatPositionName>
   <SetFormatPositionNumber>39</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AUTOCTRQ set provides airborne relay stations with their transmit and receive frequencies.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The AUTOCTRQ set is PROHIBITED if the AMSNLOC set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirborneRadioRelayStationRequirementsType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="39" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GeneralText_2" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GENTEXT/RESULTS set provides the desired results of the AIRSUPREQ.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GENERAL TEXT</SetFormatPositionName>
   <SetFormatPositionNumber>40</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GENTEXT/RESULTS set provides the desired results of the AIRSUPREQ.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>Field 1 of the GENTEXT set must equal "RESULTS".</SetFormatPositionUseDescription>
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GeneralTextType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="40" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GeneralText_3" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GENTEXT/RATIONALE set provides rationale for the AIRSUPREQ.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GENERAL TEXT</SetFormatPositionName>
   <SetFormatPositionNumber>41</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GENTEXT/RATIONALE set provides rationale for the AIRSUPREQ.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>Field 1 of the GENTEXT set must equal "RATIONALE".</SetFormatPositionUseDescription>
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GeneralTextType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="41" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GroundLocationOfFriendlyTroops" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The GNDFRND set provides the location of friendly forces in the proximity of the target area or reports friendly position of units participating in the mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GROUND LOCATION OF FRIENDLY TROOPS</SetFormatPositionName>
   <SetFormatPositionNumber>42</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GNDFRND set provides the location of friendly forces in the proximity of the target area or reports friendly position of units participating in the mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GroundLocationOfFriendlyTroopsType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="42" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="AdditionalFriendlyForcesSegment" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The sets FYLOC through IFF form an OPERATIONALLY DETERMINED NESTED SEGMENT to identify multiple positions for a friendly force.</xsd:documentation>
  <xsd:appinfo>
   <SegmentStructureName>ADDITIONAL FRIENDLY FORCES SEGMENT</SegmentStructureName>
   <SegmentStructureConcept />
   <SegmentStructureUseDescription>The sets FYLOC through IFF form an OPERATIONALLY DETERMINED NESTED SEGMENT to identify multiple positions for a friendly force.</SegmentStructureUseDescription>
   <InitialSetFormatPosition>43</InitialSetFormatPosition>
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
   <VersionIndicator />
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence>

<xsd:element name="FriendlyForcesLocation" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The FYLOC set provides the positions of the friendly forces.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>FRIENDLY FORCES LOCATION</SetFormatPositionName>
   <SetFormatPositionNumber>43</SetFormatPositionNumber>
   <SetFormatPositionConcept>The FYLOC set provides the positions of the friendly forces.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:FriendlyForcesLocationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="43" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="CodesCryptoAndAuthentication" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The CODES set specifies the crypto code and/or authentication tables that are to be used.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>CODES, CRYPTO AND AUTHENTICATION</SetFormatPositionName>
   <SetFormatPositionNumber>44</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CODES set specifies the crypto code and/or authentication tables that are to be used.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:CodesCryptoAndAuthenticationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="44" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="IffOrSifSetting" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The IFF set establishes specific identification procedures for a tasked event. For cross-service support, the unit designation will be completed by the service providing the support.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>IFF OR SIF SETTING</SetFormatPositionName>
   <SetFormatPositionNumber>45</SetFormatPositionNumber>
   <SetFormatPositionConcept>The IFF set establishes specific identification procedures for a tasked event. For cross-service support, the unit designation will be completed by the service providing the support.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:IffOrSifSettingType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="45" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="segSeq" type="xsd:unsignedShort" fixed="43" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element>

<xsd:element name="AircraftControlAgencyInformation" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The CNTLINFO set provides instructions for contacting control agencies and other entities.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRCRAFT CONTROL AGENCY INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>46</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CNTLINFO set provides instructions for contacting control agencies and other entities.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AircraftControlAgencyInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="46" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="MissionProtectedFrequencies" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The PROTFREQ set identifies frequencies that should be protected from jamming. The protected frequencies should be ranked with the highest priority listed first.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MISSION PROTECTED FREQUENCIES</SetFormatPositionName>
   <SetFormatPositionNumber>47</SetFormatPositionNumber>
   <SetFormatPositionConcept>The PROTFREQ set identifies frequencies that should be protected from jamming. The protected frequencies should be ranked with the highest priority listed first.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MissionProtectedFrequenciesType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="47" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="segSeq" type="xsd:unsignedShort" fixed="10" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="segSeq" type="xsd:unsignedShort" fixed="9" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element>

<xsd:element name="Acknowledge" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AKNLDG set provides operator acknowledgment and not communications center acknowledgment.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ACKNOWLEDGE</SetFormatPositionName>
   <SetFormatPositionNumber>48</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AKNLDG set provides operator acknowledgment and not communications center acknowledgment.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AcknowledgeType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="48" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Remarks" minOccurs="0" maxOccurs="1">
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RemarksType">
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="MessageDowngradingOrDeclassificationData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The DECL set provides declassification or downgrading instructions, if the message is classified.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE DOWNGRADING OR DECLASSIFICATION DATA</SetFormatPositionName>
   <SetFormatPositionNumber>49</SetFormatPositionNumber>
   <SetFormatPositionConcept>The DECL set provides declassification or downgrading instructions, if the message is classified.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The DECL set is REQUIRED if Field 10 in the MSGID set lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL", otherwise the DECL set is PROHIBITED.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageDowngradingOrDeclassificationDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="49" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element></xsd:sequence>
<xsd:attribute name="mtfid" type="xsd:string" fixed="AIRSUPREQ" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element></xsd:schema>