<?xml version="1.0" ?> 
<xsd:schema targetNamespace="urn:mtf:mil:6040b:abstat:B.1.01.14" xml:lang="en-US" xmlns="urn:mtf:mil:6040b:abstat:B.1.01.14" xmlns:s="urn:mtf:mil:6040b:abstat:B.1.01.14:set" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ism="urn:us:gov:ic:ism:v2" xmlns:ddms="http://metadata.dod.mil/mdr/ns/DDMS/2.0/" xmlns:ICISM="urn:us:gov:ic:ism:v2" elementFormDefault="unqualified" attributeFormDefault="unqualified">
 <xsd:import namespace="urn:mtf:mil:6040b:abstat:B.1.01.14:set" schemaLocation="sets.xsd" />
 <xsd:import namespace="urn:us:gov:ic:ism:v2" schemaLocation="IC-ISM-v2.xsd" />
 <xsd:annotation>
  <xsd:appinfo>
   <ddms:security ICISM:classification="U" ICISM:ownerProducer="USA" ICISM:nonICmarkings="DIST_STMT_C" />
  </xsd:appinfo>
  <xsd:appinfo>DISTRIBUTION STATEMENT C. Distribution authorized to U.S. Government Agencies and their contractors only for administrative or operational use. Other requests for this document shall be referred to Defense Information Systems Agency Interoperability Directorate. WARNING - This document contains technical data whose export is restricted by the Arms Export Control Act (Title 22, U.S.C., Sec. 2751) or the Export Administration Act of 1979, as amended, Title 50, U.S.C., App. 2401. Violations of these export laws are subject to severe criminal penalties.  Disseminate in accordance with provisions of DOD Directive 5230.25.</xsd:appinfo>
 </xsd:annotation><xsd:element name="AirBaseStatusReport">
 <xsd:annotation>
  <xsd:documentation>The ABSTAT is used to report on the status of a new or established air base indicating the capability of the air base and its supporting facilities to support joint operations and to conduct planned or anticipated operations.</xsd:documentation>
  <xsd:appinfo>
   <MtfName>AIR BASE STATUS REPORT</MtfName>
   <MtfIdentifier>ABSTAT</MtfIdentifier>
   <MtfIndexReferenceNumber>B704</MtfIndexReferenceNumber>
   <MtfSponsor>USAF</MtfSponsor>
   <MtfPurpose>The ABSTAT is used to report on the status of a new or established air base indicating the capability of the air base and its supporting facilities to support joint operations and to conduct planned or anticipated operations.</MtfPurpose>
   <MtfRelatedDocument>NONE</MtfRelatedDocument>
   <MtfRemark>B.1.01.13 was updated by ICP M2017-04, which updated the REF Set.</MtfRemark>
   <MtfNote />
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F1 A /ABSTAT/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in MSGID (Set 3) is assigned the value "ABSTAT".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageTextFormatIdentifier))) then 'null' else xsn:or3(  string( /*:AirBaseStatusReport/MessageIdentifier/MessageTextFormatIdentifier) eq "ABSTAT")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F2 A /MIL-STD-6040(SERIES)/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in MSGID (Set 3) is assigned the value "MIL-STD-6040(SERIES)".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/MessageIdentifier/StandardOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:AirBaseStatusReport/MessageIdentifier/StandardOfMessageTextFormat) eq "MIL-STD-6040(SERIES)")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F3 A /B.1.01.14/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in MSGID (Set 3) is assigned the value "B.1.01.14".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/MessageIdentifier/VersionOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:AirBaseStatusReport/MessageIdentifier/VersionOfMessageTextFormat) eq "B.1.01.14")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[4],AF3 R ([4],AF2 EQ /CHT/ | /DOC/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in REF (Set 4) is required if Field 2 in the same REF (Set 4) lexicographically equals "CHT" or "DOC".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/Reference))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirBaseStatusReport/Reference) return xsn:or3(  xsn:not3(   if ( not( exists( /*:AirBaseStatusReport/Reference[ $A]/CommunicationType/*)) and not( exists( /*:AirBaseStatusReport/Reference[ $A]/CommunicationType/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:AirBaseStatusReport/Reference[ $A]/CommunicationType/*/*)) then string-join( /*:AirBaseStatusReport/Reference[ $A]/CommunicationType/*/*,"") else string( /*:AirBaseStatusReport/Reference[ $A]/CommunicationType/*)) eq "CHT",  string( if ( exists( /*:AirBaseStatusReport/Reference[ $A]/CommunicationType/*/*)) then string-join( /*:AirBaseStatusReport/Reference[ $A]/CommunicationType/*/*,"") else string( /*:AirBaseStatusReport/Reference[ $A]/CommunicationType/*)) eq "DOC")),  if ( not( exists( /*:AirBaseStatusReport/Reference[ $A]))) then 'null' else  count( /*:AirBaseStatusReport/Reference[ $A]/InformationProduct) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[6],AF2 R ([6],AF3 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in BASESTAT (Set 6) is required if Field 3 in the same BASESTAT (Set 6) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $A]))) then 'null' else  count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $A]/IcaoLocationIndicator) = 0  ),  if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $A]))) then 'null' else  count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $A]/BaseName) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[7]FG,NF1 EQ [6],NF1</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in at least one occurrence of the Field Group in 8RUNWAY (Set 7) lexicographically must equal Field 1 in at least one occurrence of BASESTAT (Set 6).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields))) then 'null' else xsn:or3( for $expr_1_1 in 1 to count( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields) return if ( not( exists( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields[ $expr_1_1]/DataEntry))) then 'null' else xsn:or3(  if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation))) then 'null' else xsn:or3( for $expr1_op1_1 in 1 to count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation) return if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))) then 'null' else string( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields[ $expr_1_1]/DataEntry) eq string( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[7]FG,AF5 RP ([7]FG,AF4 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in the Field Group in 8RUNWAY (Set 7) is required if Field 4 in the same Field Group in 8RUNWAY (Set 7) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields) return for $cond in if ( not( exists( /*:AirBaseStatusReport/RunwayStatusInformation))) then 'null' else  count( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields[ $A]/TimeOfReturnToOperations) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirBaseStatusReport/RunwayStatusInformation))) then 'null' else  count( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields[ $A]/TimeDesignator) != 0  else  if ( not( exists( /*:AirBaseStatusReport/RunwayStatusInformation))) then 'null' else  count( /*:AirBaseStatusReport/RunwayStatusInformation/GroupOfFields[ $A]/TimeDesignator) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[8],NF1 EQ [6],NF1</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in at least one occurrence of LIGHTING (Set 8) lexicographically must equal Field 1 in at least one occurrence of BASESTAT (Set 6).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/RunwayLightingInformation))) then 'null' else xsn:or3( for $expr_1_1 in 1 to count( /*:AirBaseStatusReport/RunwayLightingInformation) return if ( not( exists( /*:AirBaseStatusReport/RunwayLightingInformation[ $expr_1_1]/DataEntry))) then 'null' else xsn:or3(  if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation))) then 'null' else xsn:or3( for $expr1_op1_1 in 1 to count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation) return if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))) then 'null' else string( /*:AirBaseStatusReport/RunwayLightingInformation[ $expr_1_1]/DataEntry) eq string( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9]FG,NF1 EQ [6],NF1</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in at least one occurrence of the Field Group in 8ARREST (Set 9) lexicographically must equal Field 1 in at least one occurrence of BASESTAT (Set 6).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields))) then 'null' else xsn:or3( for $expr_1_1 in 1 to count( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields) return if ( not( exists( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields[ $expr_1_1]/DataEntry))) then 'null' else xsn:or3(  if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation))) then 'null' else xsn:or3( for $expr1_op1_1 in 1 to count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation) return if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))) then 'null' else string( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields[ $expr_1_1]/DataEntry) eq string( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9]FG,AF7 RP ([9]FG,AF6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 7 in the Field Group in 8ARREST (Set 9) is required if Field 6 in the same Field Group in 8ARREST (Set 9) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields) return for $cond in if ( not( exists( /*:AirBaseStatusReport/ArrestingGearData))) then 'null' else  count( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields[ $A]/TimeOfReturnToOperation) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirBaseStatusReport/ArrestingGearData))) then 'null' else  count( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields[ $A]/TimeDesignator) != 0  else  if ( not( exists( /*:AirBaseStatusReport/ArrestingGearData))) then 'null' else  count( /*:AirBaseStatusReport/ArrestingGearData/GroupOfFields[ $A]/TimeDesignator) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[10]FG,NF1 EQ [6],NF1</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in at least one occurrence of the Field Group in 8RADIO (Set 10) lexicographically must equal Field 1 in at least one occurrence of BASESTAT (Set 6).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields))) then 'null' else xsn:or3( for $expr_1_1 in 1 to count( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields) return if ( not( exists( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields[ $expr_1_1]/DataEntry))) then 'null' else xsn:or3(  if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation))) then 'null' else xsn:or3( for $expr1_op1_1 in 1 to count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation) return if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))) then 'null' else string( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields[ $expr_1_1]/DataEntry) eq string( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[10]FG,AF6 RP ([10]FG,AF5 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in the Field Group in 8RADIO (Set 10) is required if Field 5 in the same Field Group in 8RADIO (Set 10) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields) return for $cond in if ( not( exists( /*:AirBaseStatusReport/AirMissionRadioInformation))) then 'null' else  count( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields[ $A]/TimeOfReturnToOperations) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirBaseStatusReport/AirMissionRadioInformation))) then 'null' else  count( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields[ $A]/TimeDesignator) != 0  else  if ( not( exists( /*:AirBaseStatusReport/AirMissionRadioInformation))) then 'null' else  count( /*:AirBaseStatusReport/AirMissionRadioInformation/GroupOfFields[ $A]/TimeDesignator) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[11]FG,NF1 EQ [6],NF1</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in at least one occurrence of the Field Group in 8NAVAID (Set 11) lexicographically must equal Field 1 in at least one occurrence of BASESTAT (Set 6).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields))) then 'null' else xsn:or3( for $expr_1_1 in 1 to count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields) return if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $expr_1_1]/DataEntry))) then 'null' else xsn:or3(  if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation))) then 'null' else xsn:or3( for $expr1_op1_1 in 1 to count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation) return if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))) then 'null' else string( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $expr_1_1]/DataEntry) eq string( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[11]FG,AF5 R (([11]FG,AF2 @) | ([11]FG,AF3 @) | ([11]FG,AF4 @))</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in the Field Group in 8NAVAID (Set 11) is required if Field 2 in the same Field Group in 8NAVAID (Set 11) occurs or Field 3 in the same Field Group in 8NAVAID (Set 11) occurs or Field 4 in the same Field Group in 8NAVAID (Set 11) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields) return xsn:or3(  xsn:not3(  xsn:or3(  if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation))) then 'null' else  count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $A]/NavigationalAidType) != 0 ,  if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation))) then 'null' else  count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $A]/NavigationalAidName) != 0 ,  if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation))) then 'null' else  count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $A]/NavigationalAidIdentifier) != 0 ) ),  if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation))) then 'null' else  count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $A]/OperationalStatus) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[11]FG,AF7 RP ([11]FG,AF6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 7 in the Field Group in 8NAVAID (Set 11) is required if Field 6 in the same Field Group in 8NAVAID (Set 11) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields) return for $cond in if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation))) then 'null' else  count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $A]/TimeOfReturnToOperations) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation))) then 'null' else  count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $A]/TimeDesignator) != 0  else  if ( not( exists( /*:AirBaseStatusReport/NavigationalAidInformation))) then 'null' else  count( /*:AirBaseStatusReport/NavigationalAidInformation/GroupOfFields[ $A]/TimeDesignator) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[12]FG,NF1 EQ [6],NF1</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in the Field Group in 8POL (Set 12) lexicographically must equal Field 1 in at least one occurrence of BASESTAT (Set 6).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields))) then 'null' else xsn:or3( for $expr_1_1 in 1 to count( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields) return if ( not( exists( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields[ $expr_1_1]/DataEntry))) then 'null' else xsn:or3(  if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation))) then 'null' else xsn:or3( for $expr1_op1_1 in 1 to count( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation) return if ( not( exists( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))) then 'null' else string( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields[ $expr_1_1]/DataEntry) eq string( /*:AirBaseStatusReport/AirbaseOperationalStatusInformation[ $expr1_op1_1]/DataEntry))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[12]FG,AF9 RP ([12]FG,AF8 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 9 in the Field Group in 8POL (Set 12) is required if Field 8 in the same Field Group in 8POL (Set 12) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields) return for $cond in if ( not( exists( /*:AirBaseStatusReport/PolStatusInformation))) then 'null' else  count( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields[ $A]/TimeOfReturnToOperation) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirBaseStatusReport/PolStatusInformation))) then 'null' else  count( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields[ $A]/TimeDesignator) != 0  else  if ( not( exists( /*:AirBaseStatusReport/PolStatusInformation))) then 'null' else  count( /*:AirBaseStatusReport/PolStatusInformation/GroupOfFields[ $A]/TimeDesignator) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[14] RP ([3]F10 EQ /CONFIDENTIAL/ | /SECRET/ | /TOP SECRET/ | /RESTRICTED/ | /NATO RESTRICTED/ | /NATO CONFIDENTIAL/ | /NATO SECRET/ | /NATO SECRET-SAVATE/ | /NATO SECRET-AVICULA/ | /COSMIC TOP SECRET/ | /COSMIC TOP SECRET-BOHEMIA/ | /COSMIC TOP SECRET-BALK/ | /COSMIC TOP SECRET ATOMAL/ | /NATO SECRET ATOMAL/ | /NATO CONFIDENTIAL ATOMAL/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>DECL (Set 14) is required if Field 10 in MSGID (SET 3) lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL" otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in  if ( not( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) and not( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "CONFIDENTIAL",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "SECRET",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "TOP SECRET",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "RESTRICTED",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO RESTRICTED",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-SAVATE",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-AVICULA",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BOHEMIA",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BALK",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET ATOMAL",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET ATOMAL",  string( if ( exists( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirBaseStatusReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL ATOMAL")  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  count( /*:AirBaseStatusReport/MessageDowngradingOrDeclassificationData) != 0  else  count( /*:AirBaseStatusReport/MessageDowngradingOrDeclassificationData) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[14]F2 RP ([14]F1 = FF679-4)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in DECL (Set 14) is required if Field 1 in DECL (Set 14) uses alternative ORIGINAL CLASSIFICATION AUTHORITY (FF679-4) otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in if ( not( exists( /*:AirBaseStatusReport/MessageDowngradingOrDeclassificationData/SourceForClassification))) then 'null' else xsn:or3(  exists( /*:AirBaseStatusReport/MessageDowngradingOrDeclassificationData/SourceForClassification/OriginalClassificationAuthority))  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirBaseStatusReport/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:AirBaseStatusReport/MessageDowngradingOrDeclassificationData/ReasonForClassification) != 0  else  if ( not( exists( /*:AirBaseStatusReport/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:AirBaseStatusReport/MessageDowngradingOrDeclassificationData/ReasonForClassification) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <VersionIndicator>B.1.01.14</VersionIndicator>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence><xsd:choice minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:appinfo>
   <AlternativeType>Mutually Exclusive, None Required</AlternativeType>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:element name="ExerciseIdentification" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The EXER set provides the designated code name or nickname, if the message supports an exercise.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>EXERCISE IDENTIFICATION</SetFormatPositionName>
    <SetFormatPositionNumber>1</SetFormatPositionNumber>
    <SetFormatPositionConcept>The EXER set provides the designated code name or nickname, if the message supports an exercise.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:ExerciseIdentificationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="1" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="OperationIdentificationData" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The OPER set provides the designated code name or nickname, if the message supports an operation.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>OPERATION IDENTIFICATION DATA</SetFormatPositionName>
    <SetFormatPositionNumber>2</SetFormatPositionNumber>
    <SetFormatPositionConcept>The OPER set provides the designated code name or nickname, if the message supports an operation.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:OperationIdentificationDataType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="2" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
</xsd:choice>

<xsd:element name="MessageIdentifier" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The MSGID set provides the message identification and originator.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE IDENTIFIER</SetFormatPositionName>
   <SetFormatPositionNumber>3</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MSGID set provides the message identification and originator.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageIdentifierType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="3" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Reference" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The REF set provides both USMTF and non-USMTF references.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>REFERENCE</SetFormatPositionName>
   <SetFormatPositionNumber>4</SetFormatPositionNumber>
   <SetFormatPositionConcept>The REF set provides both USMTF and non-USMTF references.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ReferenceType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="4" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="MessageCancellationWithNewInformationProvided" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The CANX set cancels the ABSTAT message and provides new information. If a facility wants to cancel a message and not provide new information, the MSGCORRCANX message should be used.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE CANCELLATION WITH NEW INFORMATION PROVIDED</SetFormatPositionName>
   <SetFormatPositionNumber>5</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CANX set cancels the ABSTAT message and provides new information. If a facility wants to cancel a message and not provide new information, the MSGCORRCANX message should be used.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageCancellationWithNewInformationProvidedType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="5" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirbaseOperationalStatusInformation" minOccurs="1" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The BASESTAT set reports the status of an air base or its supporting facilities and changes that may affect its capability to support joint operations.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRBASE OPERATIONAL STATUS INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>6</SetFormatPositionNumber>
   <SetFormatPositionConcept>The BASESTAT set reports the status of an air base or its supporting facilities and changes that may affect its capability to support joint operations.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirbaseOperationalStatusInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="6" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="RunwayStatusInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8RUNWAY set reports changes to the runway status.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>RUNWAY STATUS INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>7</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8RUNWAY set reports changes to the runway status.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RunwayStatusInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="7" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="RunwayLightingInformation" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The LIGHTING set describes runway lighting.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>RUNWAY LIGHTING INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>8</SetFormatPositionNumber>
   <SetFormatPositionConcept>The LIGHTING set describes runway lighting.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RunwayLightingInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="8" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ArrestingGearData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8ARREST set reports changes to the status of the aircraft arresting system.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ARRESTING GEAR DATA</SetFormatPositionName>
   <SetFormatPositionNumber>9</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8ARREST set reports changes to the status of the aircraft arresting system.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ArrestingGearDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="9" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirMissionRadioInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8RADIO set reports the status of radios available at a particular air base.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR MISSION RADIO INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>10</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8RADIO set reports the status of radios available at a particular air base.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirMissionRadioInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="10" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="NavigationalAidInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8NAVAID set reports the status of navigational aids.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>NAVIGATIONAL AID INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>11</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8NAVAID set reports the status of navigational aids.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:NavigationalAidInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="11" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="PolStatusInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8POL Set reports the availability of POL, oxygen, or aircraft starting units at a particular air base.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>POL STATUS INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>12</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8POL Set reports the availability of POL, oxygen, or aircraft starting units at a particular air base.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:PolStatusInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="12" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Acknowledge" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AKNLDG set provides operator acknowledgment and not communications center acknowledgment.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ACKNOWLEDGE</SetFormatPositionName>
   <SetFormatPositionNumber>13</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AKNLDG set provides operator acknowledgment and not communications center acknowledgment.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AcknowledgeType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="13" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Remarks" minOccurs="0" maxOccurs="1">
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RemarksType">
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="MessageDowngradingOrDeclassificationData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The DECL set provides declassification or downgrading instructions, if the message is classified.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE DOWNGRADING OR DECLASSIFICATION DATA</SetFormatPositionName>
   <SetFormatPositionNumber>14</SetFormatPositionNumber>
   <SetFormatPositionConcept>The DECL set provides declassification or downgrading instructions, if the message is classified.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The DECL set is REQUIRED if Field 10 in the MSGID set lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL", otherwise the DECL set is PROHIBITED.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageDowngradingOrDeclassificationDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="14" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element></xsd:sequence>
<xsd:attribute name="mtfid" type="xsd:string" fixed="ABSTAT" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element></xsd:schema>