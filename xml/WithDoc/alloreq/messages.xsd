<?xml version="1.0" ?> 
<xsd:schema targetNamespace="urn:mtf:mil:6040b:alloreq:B.1.01.16" xml:lang="en-US" xmlns="urn:mtf:mil:6040b:alloreq:B.1.01.16" xmlns:s="urn:mtf:mil:6040b:alloreq:B.1.01.16:set" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ism="urn:us:gov:ic:ism:v2" xmlns:ddms="http://metadata.dod.mil/mdr/ns/DDMS/2.0/" xmlns:ICISM="urn:us:gov:ic:ism:v2" elementFormDefault="unqualified" attributeFormDefault="unqualified">
 <xsd:import namespace="urn:mtf:mil:6040b:alloreq:B.1.01.16:set" schemaLocation="sets.xsd" />
 <xsd:import namespace="urn:us:gov:ic:ism:v2" schemaLocation="IC-ISM-v2.xsd" />
 <xsd:annotation>
  <xsd:appinfo>
   <ddms:security ICISM:classification="U" ICISM:ownerProducer="USA" ICISM:nonICmarkings="DIST_STMT_C" />
  </xsd:appinfo>
  <xsd:appinfo>DISTRIBUTION STATEMENT C. Distribution authorized to U.S. Government Agencies and their contractors only for administrative or operational use. Other requests for this document shall be referred to Defense Information Systems Agency Interoperability Directorate. WARNING - This document contains technical data whose export is restricted by the Arms Export Control Act (Title 22, U.S.C., Sec. 2751) or the Export Administration Act of 1979, as amended, Title 50, U.S.C., App. 2401. Violations of these export laws are subject to severe criminal penalties.  Disseminate in accordance with provisions of DOD Directive 5230.25.</xsd:appinfo>
 </xsd:annotation><xsd:element name="AirAllocationRequest">
 <xsd:annotation>
  <xsd:documentation>The ALLOREQ is used to provide the Joint Force Commander an estimate of the total air effort, to identify any excess and joint force general support aircraft sorties, and to identify unfilled air requirements.</xsd:documentation>
  <xsd:appinfo>
   <MtfName>AIR ALLOCATION/REQUEST</MtfName>
   <MtfIdentifier>ALLOREQ</MtfIdentifier>
   <MtfIndexReferenceNumber>A655</MtfIndexReferenceNumber>
   <MtfSponsor>USAF</MtfSponsor>
   <MtfPurpose>The ALLOREQ is used to provide the Joint Force Commander an estimate of the total air effort, to identify any excess and joint force general support aircraft sorties, and to identify unfilled air requirements.</MtfPurpose>
   <MtfRelatedDocument>NONE</MtfRelatedDocument>
   <MtfRemark>B.1.01.15 was updated by ICP M2017-04, which updated the FYPOS Set and REF Set.</MtfRemark>
   <MtfNote>The ALLOREQ message is used by the Marine Corps to provide the information contained herein to the CATF when an ATF exists. This message is one of four messages supporting the preplanned air tasking cycle. The others are the AIRSUPREQ, SORTIEALOT and the ATO. Although this message has a considerable number of sets that are available for use in this message, a limited number of sets will be required in any one message. Requests received from a supported command in the air support request that cannot be filled and other requests will be included in this message.</MtfNote>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F1 A /ALLOREQ/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in MSGID (Set 3) is assigned the value "ALLOREQ".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/MessageIdentifier/MessageTextFormatIdentifier))) then 'null' else xsn:or3(  string( /*:AirAllocationRequest/MessageIdentifier/MessageTextFormatIdentifier) eq "ALLOREQ")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F2 A /MIL-STD-6040(SERIES)/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in MSGID (Set 3) is assigned the value "MIL-STD-6040(SERIES)".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/MessageIdentifier/StandardOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:AirAllocationRequest/MessageIdentifier/StandardOfMessageTextFormat) eq "MIL-STD-6040(SERIES)")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F3 A /B.1.01.16/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in MSGID (Set 3) is assigned the value "B.1.01.16".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/MessageIdentifier/VersionOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:AirAllocationRequest/MessageIdentifier/VersionOfMessageTextFormat) eq "B.1.01.16") </MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[4],AF3 R ([4],AF2 EQ /CHT/ | /DOC/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in REF (Set 4) is required if Field 2 in the same REF (Set 4) lexicographically equals "CHT" or "DOC".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/Reference))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/Reference) return xsn:or3(  xsn:not3(   if ( not( exists( /*:AirAllocationRequest/Reference[ $A]/CommunicationType/*)) and not( exists( /*:AirAllocationRequest/Reference[ $A]/CommunicationType/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:AirAllocationRequest/Reference[ $A]/CommunicationType/*/*)) then string-join( /*:AirAllocationRequest/Reference[ $A]/CommunicationType/*/*,"") else string( /*:AirAllocationRequest/Reference[ $A]/CommunicationType/*)) eq "CHT",  string( if ( exists( /*:AirAllocationRequest/Reference[ $A]/CommunicationType/*/*)) then string-join( /*:AirAllocationRequest/Reference[ $A]/CommunicationType/*/*,"") else string( /*:AirAllocationRequest/Reference[ $A]/CommunicationType/*)) eq "DOC") ,  if ( not( exists( /*:AirAllocationRequest/Reference[ $A]))) then 'null' else  count( /*:AirAllocationRequest/Reference[ $A]/InformationProduct) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9]FG,AF10 R ([9]FG,AF3 EQ /G/*)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 10 in the Field Group in 8REQUEST (Set 9) is required if Field 3 in the same Field Group in 8REQUEST (Set 9) lexicographically equals "G"*.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/AirMissionRequestInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/AirMissionRequestInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/AirMissionRequestInformation/GroupOfFields[ $A]/MissionType))) then 'null' else xsn:or3(  starts-with( string( /*:AirAllocationRequest/AirMissionRequestInformation/GroupOfFields[ $A]/MissionType), "G"))  ),  if ( not( exists( /*:AirAllocationRequest/AirMissionRequestInformation))) then 'null' else  count( /*:AirAllocationRequest/AirMissionRequestInformation/GroupOfFields[ $A]/AlertStatus) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[10],AF4 R ([10],AF2 EQ /TGTPT/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in MSNLOC8 (Set 10) is required if Field 2 in the same MSNLOC8 (Set 10) lexicographically equals "TGTPT".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/AirMissionLocationInformation))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/AirMissionLocationInformation) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/AirMissionLocationInformation[ $A]/MissionLocationType))) then 'null' else xsn:or3(  string( /*:AirAllocationRequest/AirMissionLocationInformation[ $A]/MissionLocationType) eq "TGTPT")  ),  if ( not( exists( /*:AirAllocationRequest/AirMissionLocationInformation[ $A]))) then 'null' else  count( /*:AirAllocationRequest/AirMissionLocationInformation[ $A]/LocationIdentification) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[12]FG,AF5 R ([12]FG,AF4 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in the Field Group in 8GNDFRND (Set 12) is required if Field 4 in the same Field Group in 8GNDFRND (Set 12) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/GroundLocationInformationOfFriendlyTroops/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/GroundLocationInformationOfFriendlyTroops/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/GroundLocationInformationOfFriendlyTroops))) then 'null' else  count( /*:AirAllocationRequest/GroundLocationInformationOfFriendlyTroops/GroupOfFields[ $A]/MethodOfMarkingFriendlyPositions) != 0  ),  if ( not( exists( /*:AirAllocationRequest/GroundLocationInformationOfFriendlyTroops))) then 'null' else  count( /*:AirAllocationRequest/GroundLocationInformationOfFriendlyTroops/GroupOfFields[ $A]/Color) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[13]FG,AF2 = FF956-14 ([13]FG,AF1 = FF3-4)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in the Field Group in 8TGTDESC (Set 13) must use alternative NUMBER OF DMPIS PASSED (FF956-14) if Field 1 in the same Field Group in 8TGTDESC (Set 13) uses alternative STANDARD AIR REQUEST NUMBER (FF3-4).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/ReferenceNumber))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/ReferenceNumber/StandardAirRequestNumber))  ),  if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/NumberOfTargetsDescribedOrDmpisPassed))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/NumberOfTargetsDescribedOrDmpisPassed/NumberOfDmpisPassed))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[13]FG,AF2 = FF956-2 ([13]FG,AF1 = FF673-1)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in the Field Group in 8TGTDESC (Set 13) must use alternative NUMBER OF TARGETS DESCRIBED (FF956-2) if Field 1 in the same Field Group in 8TGTDESC (Set 13) uses alternative REFERENCE NUMBER (FF673-1).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/ReferenceNumber))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/ReferenceNumber/ReferenceNumber))  ),  if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/NumberOfTargetsDescribedOrDmpisPassed))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/NumberOfTargetsDescribedOrDmpisPassed/NumberOfTargetsDescribed))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[13]FG,AF6 R ([13]FG,AF5 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in the Field Group in 8TGTDESC (Set 13) is required if Field 5 in the same Field Group in 8TGTDESC (Set 13) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI))) then 'null' else  count( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/TargetHeadingOrAlignment) != 0  ),  if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartI))) then 'null' else  count( /*:AirAllocationRequest/TargetDescriptionInformationPartI/GroupOfFields[ $A]/SpeedOfMovement) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[14] RP ([13] @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>9TGTDESC (Set 14) is required if 8TGTDESC (Set 13) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in count( /*:AirAllocationRequest/TargetDescriptionInformationPartI) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  count( /*:AirAllocationRequest/TargetDescriptionInformationPartIi) != 0  else  count( /*:AirAllocationRequest/TargetDescriptionInformationPartIi) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[14]FG,AF3 R ([14]FG,AF2 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in the Field Group in 9TGTDESC (Set 14) is required if Field 2 in the same Field Group in 9TGTDESC (Set 14) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartIi/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/TargetDescriptionInformationPartIi/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartIi))) then 'null' else  count( /*:AirAllocationRequest/TargetDescriptionInformationPartIi/GroupOfFields[ $A]/TargetLength) != 0  ),  if ( not( exists( /*:AirAllocationRequest/TargetDescriptionInformationPartIi))) then 'null' else  count( /*:AirAllocationRequest/TargetDescriptionInformationPartIi/GroupOfFields[ $A]/TargetRadiusWidth) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[16]FG,AF6 R ([16]FG,AF5 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in the Field Group in 8BEACON (Set 16) is required if Field 5 in the same Field Group in 8BEACON (Set 16) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/BeaconDescription/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/BeaconDescription/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/BeaconDescription))) then 'null' else  count( /*:AirAllocationRequest/BeaconDescription/GroupOfFields[ $A]/TimeOn) != 0  ),  if ( not( exists( /*:AirAllocationRequest/BeaconDescription))) then 'null' else  count( /*:AirAllocationRequest/BeaconDescription/GroupOfFields[ $A]/TimeOff) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[18] R ([17] @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>9SHIP (Set 18) is required if 8SHIP (Set 17) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>xsn:or3(  xsn:not3(  count( /*:AirAllocationRequest/ShipTargetInformation) != 0  ),  count( /*:AirAllocationRequest/ShipPositionAndMovementData) != 0  )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[18]FG,AF5 R ([18]FG,AF4 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in the Field Group in 9SHIP (Set 18) is required if Field 4 in the same Field Group in 9SHIP (Set 18) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ShipPositionAndMovementData/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ShipPositionAndMovementData/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/ShipPositionAndMovementData))) then 'null' else  count( /*:AirAllocationRequest/ShipPositionAndMovementData/GroupOfFields[ $A]/CourseDegreesTrue) != 0  ),  if ( not( exists( /*:AirAllocationRequest/ShipPositionAndMovementData))) then 'null' else  count( /*:AirAllocationRequest/ShipPositionAndMovementData/GroupOfFields[ $A]/SpeedInKnots) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[19]FG,AF7 R ([19]FG,AF6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 7 in the Field Group in 8MOVAA (Set 19) is required if Field 6 in the same Field Group in 8MOVAA (Set 19) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/MovementAndAntiairWarfareAxisInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/MovementAndAntiairWarfareAxisInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/MovementAndAntiairWarfareAxisInformation))) then 'null' else  count( /*:AirAllocationRequest/MovementAndAntiairWarfareAxisInformation/GroupOfFields[ $A]/AntiairWarfareAxisInDegrees) != 0  ),  if ( not( exists( /*:AirAllocationRequest/MovementAndAntiairWarfareAxisInformation))) then 'null' else  count( /*:AirAllocationRequest/MovementAndAntiairWarfareAxisInformation/GroupOfFields[ $A]/ZoneAngleInDegrees) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[21]FG,AF4 R ([21]FG,AF2 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in the Field Group in 8EWDATA (Set 21) is required if Field 2 in the same Field Group in 8EWDATA (Set 21) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation))) then 'null' else  count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields[ $A]/EmitterType) != 0  ),  if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation))) then 'null' else  count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields[ $A]/RadioRadarFunction) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[21]FG,AF5 R (([21]FG,AF2 !@) &amp; ([21]FG,AF3 !@) &amp; ([21]FG,AF4 !@))</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in the Field Group in 8EWDATA (Set 21) is required if Field 2 in the same Field Group in 8EWDATA (Set 21) does not occur and if Field 3 in the same Field Group in 8EWDATA (Set 21) does not occur and if Field 4 in the same Field Group in 8EWDATA (Set 21) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields) return xsn:or3(  xsn:not3(  xsn:and3(  if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation))) then 'null' else  count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields[ $A]/EmitterType) = 0 ,  if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation))) then 'null' else  count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields[ $A]/ElintNotationOrSortingCode) = 0 ,  if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation))) then 'null' else  count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields[ $A]/RadioRadarFunction) = 0 ) ),  if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation))) then 'null' else  count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields[ $A]/LowerFrequency) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[21]FG,AF6 R ([21]FG,AF5 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in the Field Group in 8EWDATA (Set 21) is required if Field 5 in the same Field Group in 8EWDATA (Set 21) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation))) then 'null' else  count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields[ $A]/LowerFrequency) != 0  ),  if ( not( exists( /*:AirAllocationRequest/ElectronicWarfareInformation))) then 'null' else  count( /*:AirAllocationRequest/ElectronicWarfareInformation/GroupOfFields[ $A]/UpperFrequency) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[22]FG,AF4 R ([22]FG,AF3 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in the Field Group in 8CHAFF (Set 22) is required if Field 3 in the same Field Group in 8CHAFF (Set 22) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation))) then 'null' else  count( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/LowerElectronicAttackFrequency) != 0  ),  if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation))) then 'null' else  count( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/UpperElectronicAttackFrequency) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[22]FG,AF4 = FF110-1 ([22]FG,AF3 = FF110-1)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in the Field Group in 8CHAFF (Set 22) must use alternative RADIO FREQUENCY (FF110-1) if Field 3 in the same Field Group in 8CHAFF (Set 22) uses alternative RADIO FREQUENCY (FF110-1).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/LowerElectronicAttackFrequency))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/LowerElectronicAttackFrequency/RadioFrequency))  ),  if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/UpperElectronicAttackFrequency))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/UpperElectronicAttackFrequency/RadioFrequency))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[22]FG,AF4 = FF652-1 ([22]FG,AF3 = FF652-1)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in the Field Group in 8CHAFF (Set 22) must use alternative FREQUENCY OF EMISSION (FF652-1) if Field 3 in the same Field Group in 8CHAFF (Set 22) uses alternative FREQUENCY OF EMISSION (FF652-1).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/LowerElectronicAttackFrequency))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/LowerElectronicAttackFrequency/FrequencyOfEmission))  ),  if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/UpperElectronicAttackFrequency))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/UpperElectronicAttackFrequency/FrequencyOfEmission))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[22]FG,AF6 R ([22]FG,AF5 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in the Field Group in 8CHAFF (Set 22) is required if Field 5 in the same Field Group in 8CHAFF (Set 22) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation))) then 'null' else  count( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/LowerFlightLevelInHundredsOfFeet) != 0  ),  if ( not( exists( /*:AirAllocationRequest/ChaffMissionInformation))) then 'null' else  count( /*:AirAllocationRequest/ChaffMissionInformation/GroupOfFields[ $A]/UpperFlightLevelInHundredsOfFeet) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[25]FG,AF6 R ([25]FG,AF4 EQ /PRINT/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in the Field Group in 8REPORT (Set 25) is required if Field 4 in the same Field Group in 8REPORT (Set 25) lexicographically equals "PRINT".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/ReconnaissanceReportRequirements/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/ReconnaissanceReportRequirements/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/ReconnaissanceReportRequirements/GroupOfFields[ $A]/ReconnaissanceProductDesired))) then 'null' else xsn:or3(  string( /*:AirAllocationRequest/ReconnaissanceReportRequirements/GroupOfFields[ $A]/ReconnaissanceProductDesired) eq "PRINT")  ),  if ( not( exists( /*:AirAllocationRequest/ReconnaissanceReportRequirements))) then 'null' else  count( /*:AirAllocationRequest/ReconnaissanceReportRequirements/GroupOfFields[ $A]/ScaleOfPrints) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[26]FG,AF7 RP ([26]FG,AF6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 7 in the Field Group in 8AIRDROP (Set 26) is required if Field 6 in the same Field Group in 8AIRDROP (Set 26) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/DropZoneData/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/DropZoneData/GroupOfFields) return for $cond in if ( not( exists( /*:AirAllocationRequest/DropZoneData))) then 'null' else  count( /*:AirAllocationRequest/DropZoneData/GroupOfFields[ $A]/DropZoneLengthInMeters) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirAllocationRequest/DropZoneData))) then 'null' else  count( /*:AirAllocationRequest/DropZoneData/GroupOfFields[ $A]/DropZoneWidthInMeters) != 0  else  if ( not( exists( /*:AirAllocationRequest/DropZoneData))) then 'null' else  count( /*:AirAllocationRequest/DropZoneData/GroupOfFields[ $A]/DropZoneWidthInMeters) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[26]FG,AF9 RP ([26]FG,AF8 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 9 in the Field Group in 8AIRDROP (Set 26) is required if Field 8 in the same Field Group in 8AIRDROP (Set 26) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/DropZoneData/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/DropZoneData/GroupOfFields) return for $cond in if ( not( exists( /*:AirAllocationRequest/DropZoneData))) then 'null' else  count( /*:AirAllocationRequest/DropZoneData/GroupOfFields[ $A]/MethodOfMarkingFriendlyPositions) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirAllocationRequest/DropZoneData))) then 'null' else  count( /*:AirAllocationRequest/DropZoneData/GroupOfFields[ $A]/Color) != 0  else  if ( not( exists( /*:AirAllocationRequest/DropZoneData))) then 'null' else  count( /*:AirAllocationRequest/DropZoneData/GroupOfFields[ $A]/Color) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[27]FG,LF6 P ([27]FG,Z @&gt; 1)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in the last occurrence of the Field Group in 8ROUTE (Set 27) is prohibited if the number of occurrences of the Field Group in 8ROUTE (Set 27) is greater than 1.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/AircraftRouteData))) then false() else  count( /*:AirAllocationRequest/AircraftRouteData/GroupOfFields) &gt; 1  ),  if ( not( exists( /*:AirAllocationRequest/AircraftRouteData))) then 'null' else  count( /*:AirAllocationRequest/AircraftRouteData/GroupOfFields[last()]/SpeedOfMovement) = 0  )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[33]FG,AF7 R ([33]FG,AF6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 7 in the Field Group in 8CARGO (Set 33) is required if Field 6 in the same Field Group in 8CARGO (Set 33) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation))) then 'null' else  count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields[ $A]/CargoCubicSize) != 0  ),  if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation))) then 'null' else  count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields[ $A]/Length) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[33]FG,AF8 R ([33]FG,AF6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 8 in the Field Group in 8CARGO (Set 33) is required if Field 6 in the same Field Group in 8CARGO (Set 33) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation))) then 'null' else  count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields[ $A]/CargoCubicSize) != 0  ),  if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation))) then 'null' else  count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields[ $A]/Width) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[33]FG,AF9 R ([33]FG,AF6 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 9 in the Field Group in 8CARGO (Set 33) is required if Field 6 in the same Field Group in 8CARGO (Set 33) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation))) then 'null' else  count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields[ $A]/CargoCubicSize) != 0  ),  if ( not( exists( /*:AirAllocationRequest/AirliftCargoInformation))) then 'null' else  count( /*:AirAllocationRequest/AirliftCargoInformation/GroupOfFields[ $A]/HeightInFeetOrMeters) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[34] P ([33] !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>8SPECHND (Set 34) is prohibited if 8CARGO (Set 33) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>xsn:or3(  xsn:not3(  count( /*:AirAllocationRequest/AirliftCargoInformation) = 0  ),  count( /*:AirAllocationRequest/SpecialCargoHandling) = 0  )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[35] RP ([33] @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>8LOADATA (Set 35) is required if 8CARGO (Set 33) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in count( /*:AirAllocationRequest/AirliftCargoInformation) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  count( /*:AirAllocationRequest/AirliftLoadingData) != 0  else  count( /*:AirAllocationRequest/AirliftLoadingData) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[37]FG,AF4 R ([37]FG,AF3 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in the Field Group in 8LANDSTS (Set 37) is required if Field 3 in the same Field Group in 8LANDSTS (Set 37) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/LandingSiteData/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/LandingSiteData/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/LandingSiteData))) then 'null' else  count( /*:AirAllocationRequest/LandingSiteData/GroupOfFields[ $A]/LandingSiteActionStatus) != 0  ),  if ( not( exists( /*:AirAllocationRequest/LandingSiteData))) then 'null' else  count( /*:AirAllocationRequest/LandingSiteData/GroupOfFields[ $A]/AsOfDayTime) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[37]FG,AF6 R ([37]FG,AF5 @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 6 in the Field Group in 8LANDSTS (Set 37) is required if Field 5 in the same Field Group in 8LANDSTS (Set 37) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AirAllocationRequest/LandingSiteData/GroupOfFields))) then 'null' else xsn:and3( for $A in 1 to count( /*:AirAllocationRequest/LandingSiteData/GroupOfFields) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AirAllocationRequest/LandingSiteData))) then 'null' else  count( /*:AirAllocationRequest/LandingSiteData/GroupOfFields[ $A]/MethodOfMarkingFriendlyPositions) != 0  ),  if ( not( exists( /*:AirAllocationRequest/LandingSiteData))) then 'null' else  count( /*:AirAllocationRequest/LandingSiteData/GroupOfFields[ $A]/Color) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[47] RP ([3]F10 EQ /CONFIDENTIAL/ | /SECRET/ | /TOP SECRET/ | /RESTRICTED/ | /NATO RESTRICTED/ | /NATO CONFIDENTIAL/ | /NATO SECRET/ | /NATO SECRET-SAVATE/ | /NATO SECRET-AVICULA/ | /COSMIC TOP SECRET/ | /COSMIC TOP SECRET-BOHEMIA/ | /COSMIC TOP SECRET-BALK/ | /COSMIC TOP SECRET ATOMAL/ | /NATO SECRET ATOMAL/ | /NATO CONFIDENTIAL ATOMAL/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>DECL (Set 47) is required if Field 10 in MSGID (SET 3) lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL" otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in  if ( not( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) and not( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "CONFIDENTIAL",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "SECRET",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "TOP SECRET",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "RESTRICTED",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO RESTRICTED",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-SAVATE",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-AVICULA",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BOHEMIA",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BALK",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET ATOMAL",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET ATOMAL",  string( if ( exists( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AirAllocationRequest/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL ATOMAL")  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  count( /*:AirAllocationRequest/MessageDowngradingOrDeclassificationData) != 0  else  count( /*:AirAllocationRequest/MessageDowngradingOrDeclassificationData) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[47]F2 RP ([47]F1 = FF679-4)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in DECL (Set 47) is required if Field 1 in DECL (Set 47) uses alternative ORIGINAL CLASSIFICATION AUTHORITY (FF679-4) otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in if ( not( exists( /*:AirAllocationRequest/MessageDowngradingOrDeclassificationData/SourceForClassification))) then 'null' else xsn:or3(  exists( /*:AirAllocationRequest/MessageDowngradingOrDeclassificationData/SourceForClassification/OriginalClassificationAuthority))  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AirAllocationRequest/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:AirAllocationRequest/MessageDowngradingOrDeclassificationData/ReasonForClassification) != 0  else  if ( not( exists( /*:AirAllocationRequest/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:AirAllocationRequest/MessageDowngradingOrDeclassificationData/ReasonForClassification) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <VersionIndicator>B.1.01.16</VersionIndicator>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence><xsd:choice minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:appinfo>
   <AlternativeType>Mutually Exclusive, None Required</AlternativeType>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:element name="ExerciseIdentification" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The EXER set provides the designated code name or nickname, if the message supports an exercise.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>EXERCISE IDENTIFICATION</SetFormatPositionName>
    <SetFormatPositionNumber>1</SetFormatPositionNumber>
    <SetFormatPositionConcept>The EXER set provides the designated code name or nickname, if the message supports an exercise.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:ExerciseIdentificationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="1" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="OperationIdentificationData" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The OPER set provides the designated code name or nickname, if the message supports an operation.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>OPERATION IDENTIFICATION DATA</SetFormatPositionName>
    <SetFormatPositionNumber>2</SetFormatPositionNumber>
    <SetFormatPositionConcept>The OPER set provides the designated code name or nickname, if the message supports an operation.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:OperationIdentificationDataType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="2" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
</xsd:choice>

<xsd:element name="MessageIdentifier" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The MSGID set provides the message identification and originator.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE IDENTIFIER</SetFormatPositionName>
   <SetFormatPositionNumber>3</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MSGID set provides the message identification and originator.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageIdentifierType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="3" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Reference" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The REF set provides both USMTF and non-USMTF references.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>REFERENCE</SetFormatPositionName>
   <SetFormatPositionNumber>4</SetFormatPositionNumber>
   <SetFormatPositionConcept>The REF set provides both USMTF and non-USMTF references.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ReferenceType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="4" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="MessageCancellationWithNewInformationProvided" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The CANX set cancels the ALLOREQ message and provides new information. If a facility wants to cancel a message and not provide new information, the MSGCORRCANX message should be used.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE CANCELLATION WITH NEW INFORMATION PROVIDED</SetFormatPositionName>
   <SetFormatPositionNumber>5</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CANX set cancels the ALLOREQ message and provides new information. If a facility wants to cancel a message and not provide new information, the MSGCORRCANX message should be used.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageCancellationWithNewInformationProvidedType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="5" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="EffectiveDayTimePeriod" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The PERID set specifies the time period of the air allocation/request.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>EFFECTIVE DAY-TIME PERIOD</SetFormatPositionName>
   <SetFormatPositionNumber>6</SetFormatPositionNumber>
   <SetFormatPositionConcept>The PERID set specifies the time period of the air allocation/request.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:EffectiveDayTimePeriodType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="6" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirAllocationInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8ALLOCAT set informs the Joint Operational Commander how the reporting component command plans to use its aircraft. If only excess sorties are to be reported, use the 8JNTEXC set instead of the 8ALLOCAT.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR ALLOCATION INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>7</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8ALLOCAT set informs the Joint Operational Commander how the reporting component command plans to use its aircraft. If only excess sorties are to be reported, use the 8JNTEXC set instead of the 8ALLOCAT.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirAllocationInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="7" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="JointExcessAircraftInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8JNTEXC set reports excess or joint force general support sorties available for tasking by the Joint Force Commander.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>JOINT EXCESS AIRCRAFT INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>8</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8JNTEXC set reports excess or joint force general support sorties available for tasking by the Joint Force Commander.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:JointExcessAircraftInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="8" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirMissionRequestInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8REQUEST set provides the basic information for the air support request. Subsequent sets will amplify this basic information.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR MISSION REQUEST INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>9</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8REQUEST set provides the basic information for the air support request. Subsequent sets will amplify this basic information.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirMissionRequestInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="9" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirMissionLocationInformation" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The MSNLOC8 set identifies a specific location for the requested mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR MISSION LOCATION INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>10</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MSNLOC8 set identifies a specific location for the requested mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirMissionLocationInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="10" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirMissionControlAgencyInformation" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The CONTROL8 set provides the control agency information for mission aircraft.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR MISSION CONTROL AGENCY INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>11</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CONTROL8 set provides the control agency information for mission aircraft.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirMissionControlAgencyInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="11" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GroundLocationInformationOfFriendlyTroops" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8GNDFRND set reports friendly positions of units participating in the mission being requested.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GROUND LOCATION INFORMATION OF FRIENDLY TROOPS</SetFormatPositionName>
   <SetFormatPositionNumber>12</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8GNDFRND set reports friendly positions of units participating in the mission being requested.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GroundLocationInformationOfFriendlyTroopsType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="12" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="TargetDescriptionInformationPartI" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8TGTDESC set provides target information primarily for close air support, interdiction, offensive counterair, and ground controlled radar bombing. Include any known threat information in the target area in an accompanying AMPN set.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>TARGET DESCRIPTION INFORMATION (PART I)</SetFormatPositionName>
   <SetFormatPositionNumber>13</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8TGTDESC set provides target information primarily for close air support, interdiction, offensive counterair, and ground controlled radar bombing. Include any known threat information in the target area in an accompanying AMPN set.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:TargetDescriptionInformationPartIType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="13" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="TargetDescriptionInformationPartIi" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 9TGTDESC set provides continuation information for the 8TGTDESC set.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>TARGET DESCRIPTION INFORMATION (PART II)</SetFormatPositionName>
   <SetFormatPositionNumber>14</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 9TGTDESC set provides continuation information for the 8TGTDESC set.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The 9TGTDESC set is REQUIRED if the 8TGTDESC set is used, otherwise the 9TGTDESC set is PROHIBITED.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:TargetDescriptionInformationPartIiType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="14" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="LaserGuidedWeaponsInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8GUIDED set provides data for the use of precision guided weapons.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>LASER GUIDED WEAPONS INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>15</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8GUIDED set provides data for the use of precision guided weapons.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:LaserGuidedWeaponsInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="15" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="BeaconDescription" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8BEACON set provides information for the placement of beacons at specific places on the ground to aid aircraft during air attacks or airdrops.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>BEACON DESCRIPTION</SetFormatPositionName>
   <SetFormatPositionNumber>16</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8BEACON set provides information for the placement of beacons at specific places on the ground to aid aircraft during air attacks or airdrops.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:BeaconDescriptionType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="16" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ShipTargetInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8SHIP set provides a general overview of the location of ships in the area of a surface combat air patrol (SUCAP) mission. Report all friendly, neutral, and hostile ships together.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>SHIP TARGET INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>17</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8SHIP set provides a general overview of the location of ships in the area of a surface combat air patrol (SUCAP) mission. Report all friendly, neutral, and hostile ships together.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ShipTargetInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="17" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ShipPositionAndMovementData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 9SHIP set provides the location of the ships reported in the 8SHIP set.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>SHIP POSITION AND MOVEMENT DATA</SetFormatPositionName>
   <SetFormatPositionNumber>18</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 9SHIP set provides the location of the ships reported in the 8SHIP set.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The 9SHIP set is REQUIRED if the 8SHIP set is used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ShipPositionAndMovementDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="18" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="MovementAndAntiairWarfareAxisInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8MOVAA set identifies the location for the formation center (ZZ) position.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MOVEMENT AND ANTIAIR WARFARE AXIS INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>19</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8MOVAA set identifies the location for the formation center (ZZ) position.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MovementAndAntiairWarfareAxisInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="19" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ForwardAirControllerAircraftSchedule" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The FACSCD set provides an airborne forward air controller (FAC) with a schedule of aircraft that are expected to be controlled.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>FORWARD AIR CONTROLLER AIRCRAFT SCHEDULE</SetFormatPositionName>
   <SetFormatPositionNumber>20</SetFormatPositionNumber>
   <SetFormatPositionConcept>The FACSCD set provides an airborne forward air controller (FAC) with a schedule of aircraft that are expected to be controlled.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ForwardAirControllerAircraftScheduleType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="20" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ElectronicWarfareInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8EWDATA set provides information for ES or EA missions.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ELECTRONIC WARFARE INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>21</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8EWDATA set provides information for ES or EA missions.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ElectronicWarfareInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="21" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ChaffMissionInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8CHAFF set provides data for a chaff mission(s).</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>CHAFF MISSION INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>22</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8CHAFF set provides data for a chaff mission(s).</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ChaffMissionInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="22" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ReconnaissanceMissionInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8RECDATA set provides information for reconnaissance and/or surveillance missions.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>RECONNAISSANCE MISSION INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>23</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8RECDATA set provides information for reconnaissance and/or surveillance missions.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ReconnaissanceMissionInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="23" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="DeliveryAddress" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8DELADDR set identifies the unit to receive reconnaissance information or a reconnaissance report for a requested mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>DELIVERY ADDRESS</SetFormatPositionName>
   <SetFormatPositionNumber>24</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8DELADDR set identifies the unit to receive reconnaissance information or a reconnaissance report for a requested mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:DeliveryAddressType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="24" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="ReconnaissanceReportRequirements" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8REPORT set provides the type of reports requested for a reconnaissance and/or surveillance mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>RECONNAISSANCE REPORT REQUIREMENTS</SetFormatPositionName>
   <SetFormatPositionNumber>25</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8REPORT set provides the type of reports requested for a reconnaissance and/or surveillance mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ReconnaissanceReportRequirementsType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="25" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="DropZoneData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8AIRDROP set provides data for drop zones. Any significant obstructions within five kilometers of the drop zone should be described in an accompanying AMPN set.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>DROP ZONE DATA</SetFormatPositionName>
   <SetFormatPositionNumber>26</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8AIRDROP set provides data for drop zones. Any significant obstructions within five kilometers of the drop zone should be described in an accompanying AMPN set.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:DropZoneDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="26" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AircraftRouteData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8ROUTE set describes the route of the mission. This set generally applies to the route escorted aircraft or vehicles will follow; however, it can apply to other missions such as airlift. The requesting agency will designate a specific route only when many flights are involved in a mission requiring precise coordination and timing or when other tactical considerations make it necessary.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRCRAFT ROUTE DATA</SetFormatPositionName>
   <SetFormatPositionNumber>27</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8ROUTE set describes the route of the mission. This set generally applies to the route escorted aircraft or vehicles will follow; however, it can apply to other missions such as airlift. The requesting agency will designate a specific route only when many flights are involved in a mission requiring precise coordination and timing or when other tactical considerations make it necessary.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AircraftRouteDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="27" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirToAirRefuelingData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8REFUEL set provides information on the tanker aircraft requested for the refueling missions.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR-TO-AIR REFUELING DATA</SetFormatPositionName>
   <SetFormatPositionNumber>28</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8REFUEL set provides information on the tanker aircraft requested for the refueling missions.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirToAirRefuelingDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="28" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirToAirRefuelingReceiverInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 9REFUEL set provides the receiver aircraft refueling arrival times.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR-TO-AIR REFUELING RECEIVER INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>29</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 9REFUEL set provides the receiver aircraft refueling arrival times.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirToAirRefuelingReceiverInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="29" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="EscortMissionData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8ESCDATA set provides data for requested escort missions.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ESCORT MISSION DATA</SetFormatPositionName>
   <SetFormatPositionNumber>30</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8ESCDATA set provides data for requested escort missions.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:EscortMissionDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="30" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AircraftRendezvousMissionInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8RDZDATA set identifies how the requested aircraft are to rendezvous.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRCRAFT RENDEZVOUS MISSION INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>31</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8RDZDATA set identifies how the requested aircraft are to rendezvous.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AircraftRendezvousMissionInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="31" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="RendezvousLocationInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8RDZLOC set provides specific rendezvous location information and is not related to the mission location in the MSNLOC8 set.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>RENDEZVOUS LOCATION INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>32</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8RDZLOC set provides specific rendezvous location information and is not related to the mission location in the MSNLOC8 set.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RendezvousLocationInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="32" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirliftCargoInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8CARGO set provides data for the airlift of passengers and/or cargo.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRLIFT CARGO INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>33</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8CARGO set provides data for the airlift of passengers and/or cargo.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirliftCargoInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="33" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="SpecialCargoHandling" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8SPECHND set describes the special handling of the cargo listed in the 8CARGO set.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>SPECIAL CARGO HANDLING</SetFormatPositionName>
   <SetFormatPositionNumber>34</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8SPECHND set describes the special handling of the cargo listed in the 8CARGO set.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The 8SPECHND set is PROHIBITED if the 8CARGO set is not used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:SpecialCargoHandlingType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="34" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirliftLoadingData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8LOADATA set provides details for the airlift of passengers and/or cargo.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIRLIFT LOADING DATA</SetFormatPositionName>
   <SetFormatPositionNumber>35</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8LOADATA set provides details for the airlift of passengers and/or cargo.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The 8LOADATA set is REQUIRED if the 8CARGO set is used, otherwise the 8LOADATA set is PROHIBITED.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirliftLoadingDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="35" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="LandingSiteContactIdentification" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8CONTACT set provides contact call signs, primary/secondary frequencies, and/or primary/secondary telephone numbers to support the missions.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>LANDING SITE CONTACT IDENTIFICATION</SetFormatPositionName>
   <SetFormatPositionNumber>36</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8CONTACT set provides contact call signs, primary/secondary frequencies, and/or primary/secondary telephone numbers to support the missions.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:LandingSiteContactIdentificationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="36" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="LandingSiteData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8LANDSTS provides the location, action status, and/or markings for a landing site designated for a mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>LANDING SITE DATA</SetFormatPositionName>
   <SetFormatPositionNumber>37</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8LANDSTS provides the location, action status, and/or markings for a landing site designated for a mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:LandingSiteDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="37" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AirMissionProtectedFrequencies" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The 8PROTFRQ set identifies frequencies that should be protected from jamming. The protected frequencies should be ranked with the highest priority listed first.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AIR MISSION PROTECTED FREQUENCIES</SetFormatPositionName>
   <SetFormatPositionNumber>38</SetFormatPositionNumber>
   <SetFormatPositionConcept>The 8PROTFRQ set identifies frequencies that should be protected from jamming. The protected frequencies should be ranked with the highest priority listed first.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AirMissionProtectedFrequenciesType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="38" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="FriendlyForces" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The FYFCE set identifies the friendly forces operating in the assigned mission area.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>FRIENDLY FORCES</SetFormatPositionName>
   <SetFormatPositionNumber>39</SetFormatPositionNumber>
   <SetFormatPositionConcept>The FYFCE set identifies the friendly forces operating in the assigned mission area.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:FriendlyForcesType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="39" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="FriendlyForcesPosition" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The FYPOS set provides the position of friendly forces.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>FRIENDLY FORCES POSITION</SetFormatPositionName>
   <SetFormatPositionNumber>40</SetFormatPositionNumber>
   <SetFormatPositionConcept>The FYPOS set provides the position of friendly forces.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:FriendlyForcesPositionType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="40" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="IdentificationSafetyRange" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The ISR set provides the identification safety range relative to a friendly force.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>IDENTIFICATION SAFETY RANGE</SetFormatPositionName>
   <SetFormatPositionNumber>41</SetFormatPositionNumber>
   <SetFormatPositionConcept>The ISR set provides the identification safety range relative to a friendly force.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:IdentificationSafetyRangeType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="41" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="IffOrSifSetting" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The IFF set establishes specific identification procedures for requested task. For cross-service support, the unit designation will be completed by the service providing the support.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>IFF OR SIF SETTING</SetFormatPositionName>
   <SetFormatPositionNumber>42</SetFormatPositionNumber>
   <SetFormatPositionConcept>The IFF set establishes specific identification procedures for requested task. For cross-service support, the unit designation will be completed by the service providing the support.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:IffOrSifSettingType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="42" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="EmissionControlInformation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The EMCON set identifies special emission control (EMCON) procedures or conditions for the mission.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>EMISSION CONTROL INFORMATION</SetFormatPositionName>
   <SetFormatPositionNumber>43</SetFormatPositionNumber>
   <SetFormatPositionConcept>The EMCON set identifies special emission control (EMCON) procedures or conditions for the mission.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:EmissionControlInformationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="43" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="CodesCryptoAndAuthentication" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The CODES set specifies the crypto codes and/or authentication tables that are to be used.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>CODES, CRYPTO AND AUTHENTICATION</SetFormatPositionName>
   <SetFormatPositionNumber>44</SetFormatPositionNumber>
   <SetFormatPositionConcept>The CODES set specifies the crypto codes and/or authentication tables that are to be used.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:CodesCryptoAndAuthenticationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="44" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="PrincipalSetReference" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The PREF set identifies the mission number or reference number and related data lines of one or more columnar sets.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>PRINCIPAL SET REFERENCE</SetFormatPositionName>
   <SetFormatPositionNumber>45</SetFormatPositionNumber>
   <SetFormatPositionConcept>The PREF set identifies the mission number or reference number and related data lines of one or more columnar sets.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:PrincipalSetReferenceType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="45" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Acknowledge" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AKNLDG set provides operator acknowledgment and not communications center acknowledgment.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ACKNOWLEDGE</SetFormatPositionName>
   <SetFormatPositionNumber>46</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AKNLDG set provides operator acknowledgment and not communications center acknowledgment.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AcknowledgeType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="46" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Remarks" minOccurs="0" maxOccurs="1">
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RemarksType">
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="MessageDowngradingOrDeclassificationData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The DECL set provides declassification or downgrading instructions, if the message is classified.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE DOWNGRADING OR DECLASSIFICATION DATA</SetFormatPositionName>
   <SetFormatPositionNumber>47</SetFormatPositionNumber>
   <SetFormatPositionConcept>The DECL set provides declassification or downgrading instructions, if the message is classified.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The DECL set is REQUIRED if Field 10 in the MSGID set lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL", otherwise the DECL set is PROHIBITED.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageDowngradingOrDeclassificationDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="47" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element></xsd:sequence>
<xsd:attribute name="mtfid" type="xsd:string" fixed="ALLOREQ" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element></xsd:schema>