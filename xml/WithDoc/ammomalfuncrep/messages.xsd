<?xml version="1.0" ?> 
<xsd:schema targetNamespace="urn:mtf:mil:6040b:ammomalfuncrep:B.1.01.14" xml:lang="en-US" xmlns="urn:mtf:mil:6040b:ammomalfuncrep:B.1.01.14" xmlns:s="urn:mtf:mil:6040b:ammomalfuncrep:B.1.01.14:set" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ism="urn:us:gov:ic:ism:v2" xmlns:ddms="http://metadata.dod.mil/mdr/ns/DDMS/2.0/" xmlns:ICISM="urn:us:gov:ic:ism:v2" elementFormDefault="unqualified" attributeFormDefault="unqualified">
 <xsd:import namespace="urn:mtf:mil:6040b:ammomalfuncrep:B.1.01.14:set" schemaLocation="sets.xsd" />
 <xsd:import namespace="urn:us:gov:ic:ism:v2" schemaLocation="IC-ISM-v2.xsd" />
 <xsd:annotation>
  <xsd:appinfo>
   <ddms:security ICISM:classification="U" ICISM:ownerProducer="USA" ICISM:nonICmarkings="DIST_STMT_C" />
  </xsd:appinfo>
  <xsd:appinfo>DISTRIBUTION STATEMENT C. Distribution authorized to U.S. Government Agencies and their contractors only for administrative or operational use. Other requests for this document shall be referred to Defense Information Systems Agency Interoperability Directorate. WARNING - This document contains technical data whose export is restricted by the Arms Export Control Act (Title 22, U.S.C., Sec. 2751) or the Export Administration Act of 1979, as amended, Title 50, U.S.C., App. 2401. Violations of these export laws are subject to severe criminal penalties.  Disseminate in accordance with provisions of DOD Directive 5230.25.</xsd:appinfo>
 </xsd:annotation><xsd:element name="MajorAmmunitionMalfunctionInitialReport">
 <xsd:annotation>
  <xsd:documentation>The AMMOMALFUNCREP is used to provide initial notification (report) of a major ammunition malfunction.</xsd:documentation>
  <xsd:appinfo>
   <MtfName>MAJOR AMMUNITION MALFUNCTION - INITIAL REPORT</MtfName>
   <MtfIdentifier>AMMOMALFUNCREP</MtfIdentifier>
   <MtfIndexReferenceNumber>C201</MtfIndexReferenceNumber>
   <MtfSponsor>USA</MtfSponsor>
   <MtfPurpose>The AMMOMALFUNCREP is used to provide initial notification (report) of a major ammunition malfunction.</MtfPurpose>
   <MtfRelatedDocument>NONE</MtfRelatedDocument>
   <MtfRemark>B.1.01.13 was updated by ICP M2017-04, which updated the LOCATION Set, ORGID Set, and REF Set.</MtfRemark>
   <MtfNote />
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F1 A /AMMOMALFUNCREP/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in MSGID (Set 3) is assigned the value "AMMOMALFUNCREP".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageTextFormatIdentifier))) then 'null' else xsn:or3(  string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageTextFormatIdentifier) eq "AMMOMALFUNCREP")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F2 A /MIL-STD-6040(SERIES)/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in MSGID (Set 3) is assigned the value "MIL-STD-6040(SERIES)".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/StandardOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/StandardOfMessageTextFormat) eq "MIL-STD-6040(SERIES)")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F3 A /B.1.01.14/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in MSGID (Set 3) is assigned the value "B.1.01.14".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/VersionOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/VersionOfMessageTextFormat) eq "B.1.01.14")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[4],AF3 R ([4],AF2 EQ /CHT/ | /DOC/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in REF (Set 4) is required if Field 2 in the same REF (Set 4) lexicographically equals "CHT" or "DOC".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/Reference))) then 'null' else xsn:and3( for $A in 1 to count( /*:MajorAmmunitionMalfunctionInitialReport/Reference) return xsn:or3(  xsn:not3(   if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/CommunicationType/*)) and not( exists( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/CommunicationType/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/CommunicationType/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/CommunicationType/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/CommunicationType/*)) eq "CHT",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/CommunicationType/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/CommunicationType/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/CommunicationType/*)) eq "DOC")),  if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]))) then 'null' else  count( /*:MajorAmmunitionMalfunctionInitialReport/Reference[ $A]/InformationProduct) != 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5]F10 R ([5]F2 EQ /AG/ | /ARMY/ | /CORPS/ | /MD/ | /MOD/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 10 in ORGID (Set 5) is required if Field 2 in ORGID (Set 5) lexicographically equals "AG" or "ARMY" or "CORPS" or "MD" or "MOD".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>xsn:or3(  xsn:not3(  if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/OrganizationDesignator/UnitSizeIndicator))) then 'null' else xsn:or3(  string( /*:MajorAmmunitionMalfunctionInitialReport/OrganizationDesignator/UnitSizeIndicator) eq "AG",  string( /*:MajorAmmunitionMalfunctionInitialReport/OrganizationDesignator/UnitSizeIndicator) eq "ARMY",  string( /*:MajorAmmunitionMalfunctionInitialReport/OrganizationDesignator/UnitSizeIndicator) eq "CORPS",  string( /*:MajorAmmunitionMalfunctionInitialReport/OrganizationDesignator/UnitSizeIndicator) eq "MD",  string( /*:MajorAmmunitionMalfunctionInitialReport/OrganizationDesignator/UnitSizeIndicator) eq "MOD")  ),  if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/OrganizationDesignator))) then 'null' else  count( /*:MajorAmmunitionMalfunctionInitialReport/OrganizationDesignator/UnitIdentificationCodeUic) != 0  )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[8]F1 A /MALFUNCTION CAUSE/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in GENTEXT (Set 8) is assigned the value "MALFUNCTION CAUSE".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/GeneralText_1/TextIndicator))) then 'null' else xsn:or3(  string( /*:MajorAmmunitionMalfunctionInitialReport/GeneralText_1/TextIndicator) eq "MALFUNCTION CAUSE")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[9]F1 A /CASUALTIES AND DAMAGES/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in GENTEXT (Set 9) is assigned the value "CASUALTIES AND DAMAGES".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/GeneralText_2/TextIndicator))) then 'null' else xsn:or3(  string( /*:MajorAmmunitionMalfunctionInitialReport/GeneralText_2/TextIndicator) eq "CASUALTIES AND DAMAGES")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[10]F4 R ([10]F1 !@)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in AMMODESC (Set 10) is required if Field 1 in AMMODESC (Set 10) does not occur.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>xsn:or3(  xsn:not3(  if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/AmmunitionDescription))) then 'null' else  count( /*:MajorAmmunitionMalfunctionInitialReport/AmmunitionDescription/AmmunitionStockNumber) = 0  ),  if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/AmmunitionDescription))) then 'null' else  count( /*:MajorAmmunitionMalfunctionInitialReport/AmmunitionDescription/NationalShortCode) != 0  )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[14]F1 A /ACTION TAKEN/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in GENTEXT (Set 14) is assigned the value "ACTION TAKEN".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/GeneralText_3/TextIndicator))) then 'null' else xsn:or3(  string( /*:MajorAmmunitionMalfunctionInitialReport/GeneralText_3/TextIndicator) eq "ACTION TAKEN")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[16] RP ([3]F10 EQ /CONFIDENTIAL/ | /SECRET/ | /TOP SECRET/ | /RESTRICTED/ | /NATO RESTRICTED/ | /NATO CONFIDENTIAL/ | /NATO SECRET/ | /NATO SECRET-SAVATE/ | /NATO SECRET-AVICULA/ | /COSMIC TOP SECRET/ | /COSMIC TOP SECRET-BOHEMIA/ | /COSMIC TOP SECRET-BALK/ | /COSMIC TOP SECRET ATOMAL/ | /NATO SECRET ATOMAL/ | /NATO CONFIDENTIAL ATOMAL/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>DECL (Set 16) is required if Field 10 in MSGID (SET 3) lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL" otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in  if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) and not( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "CONFIDENTIAL",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "SECRET",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "TOP SECRET",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "RESTRICTED",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO RESTRICTED",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-SAVATE",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-AVICULA",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BOHEMIA",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BALK",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET ATOMAL",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET ATOMAL",  string( if ( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:MajorAmmunitionMalfunctionInitialReport/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL ATOMAL")  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  count( /*:MajorAmmunitionMalfunctionInitialReport/MessageDowngradingOrDeclassificationData) != 0  else  count( /*:MajorAmmunitionMalfunctionInitialReport/MessageDowngradingOrDeclassificationData) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[16]F2 RP ([16]F1 = FF679-4)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in DECL (Set 16) is required if Field 1 in DECL (Set 16) uses alternative ORIGINAL CLASSIFICATION AUTHORITY (FF679-4) otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageDowngradingOrDeclassificationData/SourceForClassification))) then 'null' else xsn:or3(  exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageDowngradingOrDeclassificationData/SourceForClassification/OriginalClassificationAuthority))  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:MajorAmmunitionMalfunctionInitialReport/MessageDowngradingOrDeclassificationData/ReasonForClassification) != 0  else  if ( not( exists( /*:MajorAmmunitionMalfunctionInitialReport/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:MajorAmmunitionMalfunctionInitialReport/MessageDowngradingOrDeclassificationData/ReasonForClassification) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <VersionIndicator>B.1.01.14</VersionIndicator>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence><xsd:choice minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:appinfo>
   <AlternativeType>Mutually Exclusive, None Required</AlternativeType>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:element name="ExerciseIdentification" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The EXER set provides the designated code name or nickname, if the message supports an exercise.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>EXERCISE IDENTIFICATION</SetFormatPositionName>
    <SetFormatPositionNumber>1</SetFormatPositionNumber>
    <SetFormatPositionConcept>The EXER set provides the designated code name or nickname, if the message supports an exercise.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:ExerciseIdentificationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="1" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="OperationIdentificationData" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The OPER set provides the designated code name or nickname, if the message supports an operation.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>OPERATION IDENTIFICATION DATA</SetFormatPositionName>
    <SetFormatPositionNumber>2</SetFormatPositionNumber>
    <SetFormatPositionConcept>The OPER set provides the designated code name or nickname, if the message supports an operation.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:OperationIdentificationDataType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="2" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
</xsd:choice>

<xsd:element name="MessageIdentifier" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The MSGID set provides the message identification and originator.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE IDENTIFIER</SetFormatPositionName>
   <SetFormatPositionNumber>3</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MSGID set provides the message identification and originator.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageIdentifierType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="3" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Reference" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The REF set provides both USMTF and non-USMTF references.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>REFERENCE</SetFormatPositionName>
   <SetFormatPositionNumber>4</SetFormatPositionNumber>
   <SetFormatPositionConcept>The REF set provides both USMTF and non-USMTF references.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:ReferenceType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="4" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="OrganizationDesignator" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The ORGID set identifies the unit submitting the AMMOMALFUNCREP.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ORGANIZATION DESIGNATOR</SetFormatPositionName>
   <SetFormatPositionNumber>5</SetFormatPositionNumber>
   <SetFormatPositionConcept>The ORGID set identifies the unit submitting the AMMOMALFUNCREP.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:OrganizationDesignatorType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="5" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="EffectiveDate" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The EFDT set provides the date of the ammunition malfunction.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>EFFECTIVE DATE</SetFormatPositionName>
   <SetFormatPositionNumber>6</SetFormatPositionNumber>
   <SetFormatPositionConcept>The EFDT set provides the date of the ammunition malfunction.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:EffectiveDateType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="6" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AmmunitionMalfunctionLocation" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The LOCATION set provides the location of the ammunition malfunction.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AMMUNITION MALFUNCTION LOCATION</SetFormatPositionName>
   <SetFormatPositionNumber>7</SetFormatPositionNumber>
   <SetFormatPositionConcept>The LOCATION set provides the location of the ammunition malfunction.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AmmunitionMalfunctionLocationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="7" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GeneralText_1" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GENTEXT/MALFUNCTION CAUSE set provides brief details and the cause of the malfunction. The cause is given only if it can be stated with complete assurance. Enter "UNDER INVESTIGATION" if the cause of the malfunction cannot be stated with complete assurance.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GENERAL TEXT</SetFormatPositionName>
   <SetFormatPositionNumber>8</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GENTEXT/MALFUNCTION CAUSE set provides brief details and the cause of the malfunction. The cause is given only if it can be stated with complete assurance. Enter "UNDER INVESTIGATION" if the cause of the malfunction cannot be stated with complete assurance.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>Field 1 of the GENTEXT set must equal "MALFUNCTION CAUSE".</SetFormatPositionUseDescription>
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GeneralTextType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="8" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GeneralText_2" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GENTEXT/CASUALTIES AND DAMAGES set provides information on casualties and/or damages as a result of the ammunition malfunction.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GENERAL TEXT</SetFormatPositionName>
   <SetFormatPositionNumber>9</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GENTEXT/CASUALTIES AND DAMAGES set provides information on casualties and/or damages as a result of the ammunition malfunction.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>Field 1 of the GENTEXT set must equal "CASUALTIES AND DAMAGES".</SetFormatPositionUseDescription>
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GeneralTextType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="9" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AmmunitionDescription" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AMMODESC set provides details of the ammunition or component involved in the malfunction.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AMMUNITION DESCRIPTION</SetFormatPositionName>
   <SetFormatPositionNumber>10</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AMMODESC set provides details of the ammunition or component involved in the malfunction.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AmmunitionDescriptionType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="10" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="TypeAndModelOfWeapon" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The WPNTYPE set provides the type and model number of the weapon being used at the time of the malfunction.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>TYPE AND MODEL OF WEAPON</SetFormatPositionName>
   <SetFormatPositionNumber>11</SetFormatPositionNumber>
   <SetFormatPositionConcept>The WPNTYPE set provides the type and model number of the weapon being used at the time of the malfunction.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:TypeAndModelOfWeaponType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="11" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="StateOfWeather" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The WEADATA set reports the most significant weather condition at the time of the malfunction.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>STATE OF WEATHER</SetFormatPositionName>
   <SetFormatPositionNumber>12</SetFormatPositionNumber>
   <SetFormatPositionConcept>The WEADATA set reports the most significant weather condition at the time of the malfunction.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:StateOfWeatherType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="12" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="PointOfContact" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The POCDATA set provides the unit contact information for the malfunction details.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>POINT OF CONTACT</SetFormatPositionName>
   <SetFormatPositionNumber>13</SetFormatPositionNumber>
   <SetFormatPositionConcept>The POCDATA set provides the unit contact information for the malfunction details.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:PointOfContactType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="13" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GeneralText_3" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GENTEXT/ACTION TAKEN set provides information on action taken following the occurrence and up to the submission of this report.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GENERAL TEXT</SetFormatPositionName>
   <SetFormatPositionNumber>14</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GENTEXT/ACTION TAKEN set provides information on action taken following the occurrence and up to the submission of this report.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>Field 1 of the GENTEXT set must equal "ACTION TAKEN".</SetFormatPositionUseDescription>
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GeneralTextType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="14" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Acknowledge" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AKNLDG set provides operator acknowledgment and not communications center acknowledgment.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>ACKNOWLEDGE</SetFormatPositionName>
   <SetFormatPositionNumber>15</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AKNLDG set provides operator acknowledgment and not communications center acknowledgment.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AcknowledgeType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="15" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="Remarks" minOccurs="0" maxOccurs="1">
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RemarksType">
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="MessageDowngradingOrDeclassificationData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The DECL set provides declassification or downgrading instructions, if the message is classified.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE DOWNGRADING OR DECLASSIFICATION DATA</SetFormatPositionName>
   <SetFormatPositionNumber>16</SetFormatPositionNumber>
   <SetFormatPositionConcept>The DECL set provides declassification or downgrading instructions, if the message is classified.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The DECL set is REQUIRED if Field 10 in the MSGID set lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL", otherwise the DECL set is PROHIBITED.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageDowngradingOrDeclassificationDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="16" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element></xsd:sequence>
<xsd:attribute name="mtfid" type="xsd:string" fixed="AMMOMALFUNCREP" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element></xsd:schema>