<?xml version="1.0" ?> 
<xsd:schema targetNamespace="urn:mtf:mil:6040b:afu.dcmd:B.1.01.11" xml:lang="en-US" xmlns="urn:mtf:mil:6040b:afu.dcmd:B.1.01.11" xmlns:s="urn:mtf:mil:6040b:afu.dcmd:B.1.01.11:set" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ism="urn:us:gov:ic:ism:v2" xmlns:ddms="http://metadata.dod.mil/mdr/ns/DDMS/2.0/" xmlns:ICISM="urn:us:gov:ic:ism:v2" elementFormDefault="unqualified" attributeFormDefault="unqualified">
 <xsd:import namespace="urn:mtf:mil:6040b:afu.dcmd:B.1.01.11:set" schemaLocation="sets.xsd" />
 <xsd:import namespace="urn:us:gov:ic:ism:v2" schemaLocation="IC-ISM-v2.xsd" />
 <xsd:annotation>
  <xsd:appinfo>
   <ddms:security ICISM:classification="U" ICISM:ownerProducer="USA" ICISM:nonICmarkings="DIST_STMT_C" />
  </xsd:appinfo>
  <xsd:appinfo>DISTRIBUTION STATEMENT C. Distribution authorized to U.S. Government Agencies and their contractors only for administrative or operational use. Other requests for this document shall be referred to Defense Information Systems Agency Interoperability Directorate. WARNING - This document contains technical data whose export is restricted by the Arms Export Control Act (Title 22, U.S.C., Sec. 2751) or the Export Administration Act of 1979, as amended, Title 50, U.S.C., App. 2401. Violations of these export laws are subject to severe criminal penalties.  Disseminate in accordance with provisions of DOD Directive 5230.25.</xsd:appinfo>
 </xsd:annotation><xsd:element name="AmmunitionFireUnitDeploymentCommand">
 <xsd:annotation>
  <xsd:documentation>The AFU.DCMD is used to exchange battalion/regiment mission assignments and changes thereto, preplanned fire position areas, and movement orders for battalion/regiment or fire units.</xsd:documentation>
  <xsd:appinfo>
   <MtfName>AMMUNITION FIRE UNIT-DEPLOYMENT COMMAND</MtfName>
   <MtfIdentifier>AFU.DCMD</MtfIdentifier>
   <MtfIndexReferenceNumber>A261</MtfIndexReferenceNumber>
   <MtfSponsor>USA</MtfSponsor>
   <MtfPurpose>The AFU.DCMD is used to exchange battalion/regiment mission assignments and changes thereto, preplanned fire position areas, and movement orders for battalion/regiment or fire units.</MtfPurpose>
   <MtfRelatedDocument>NONE</MtfRelatedDocument>
   <MtfRemark />
   <MtfNote />
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F1 A /AFU.DCMD/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 1 in MSGID (Set 3) is assigned the value "AFU.DCMD".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageTextFormatIdentifier))) then 'null' else xsn:or3(  string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageTextFormatIdentifier) eq "AFU.DCMD")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F2 A /MIL-STD-6040(SERIES)/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in MSGID (Set 3) is assigned the value "MIL-STD-6040(SERIES)".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/StandardOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/StandardOfMessageTextFormat) eq "MIL-STD-6040(SERIES)")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[3]F3 A /B.1.01.11/</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in MSGID (Set 3) is assigned the value "B.1.01.11".</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/VersionOfMessageTextFormat))) then 'null' else xsn:or3(  string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/VersionOfMessageTextFormat) eq "B.1.01.11")</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5..6S],Z[5]FG,ZF4 R</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 4 in every Field Group in UNT (Set 5) in every Segment which can start with UNT-NUID (Sets 5-6) is required.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]))) then 'null' else xsn:and3( for $expr1_1 in 1 to count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]) return if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $expr1_1]/UnitDesignationData))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $expr1_1]/UnitDesignationData/GroupOfFields/BattalionRegimentDesignator) != 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5..6S],Z[5]FG,ZF5 R</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 5 in every Field Group in UNT (Set 5) in every Segment which can start with UNT-NUID (Sets 5-6) is required.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]))) then 'null' else xsn:and3( for $expr1_1 in 1 to count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]) return if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $expr1_1]/UnitDesignationData))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $expr1_1]/UnitDesignationData/GroupOfFields/RegimentBrigadeDivisionDesignator) != 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5..6S],A[7]F2 = FF343-1 ([5..6S],A[7]F1 = FF342-1)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in LSNLOC (Set 7) in the Segment which can start with UNT-NUID (Sets 5-6) must use alternative UTM 1-METER NORTHING (FF343-1) if Field 1 in LSNLOC (Set 7) in the same Segment which can start with UNT-NUID (Sets 5-6) uses alternative UTM 1-METER EASTING (FF342-1).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterEasting))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterEasting/Utm1MeterEasting))  ),  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterNorthing))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterNorthing/Utm1MeterNorthing))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5..6S],A[7]F2 = FF658-2 | FF658-3 ([5..6S],A[7]F1 = FF657-2)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in LSNLOC (Set 7) in the Segment which can start with UNT-NUID (Sets 5-6) must use alternative UTM 1-METER HIGHER ORDER NORTHING, 7 CHARACTER (FF658-2) or UTM 1-METER HIGHER ORDER NORTHING, 8 CHARACTER (FF658-3) if Field 1 in LSNLOC (Set 7) in the same Segment which can start with UNT-NUID (Sets 5-6) uses alternative UTM 1-METER HIGHER ORDER EASTING (FF657-2).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterEasting))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterEasting/Utm1MeterHigherOrderEasting))  ),  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterNorthing))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterNorthing/Utm1MeterHigherOrderNorthing7Character),  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterNorthing/Utm1MeterHigherOrderNorthing8Character))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5..6S],A[7]F3 = FF687-1 ([5..6S],A[7]F1 = FF657-2)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in LSNLOC (Set 7) in the Segment which can start with UNT-NUID (Sets 5-6) must use alternative EARTH HEMISPHERE AND GRID ZONE DESIGNATOR (FF687-1) if Field 1 in LSNLOC (Set 7) in the same Segment which can start with UNT-NUID (Sets 5-6) uses alternative UTM 1-METER HIGHER ORDER EASTING (FF657-2).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterEasting))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterEasting/Utm1MeterHigherOrderEasting))  ),  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/UtmGridZone))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/UtmGridZone/EarthHemisphereAndGridZoneDesignator))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5..6S],A[7]F3 = FF1023-1 ([5..6S],A[7]F1 = FF342-1)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 3 in LSNLOC (Set 7) in the Segment which can start with UNT-NUID (Sets 5-6) must use alternative UTM GRID ZONE, AND 100-KM SQUARE (FF1023-1) if Field 1 in LSNLOC (Set 7) in the same Segment which can start with UNT-NUID (Sets 5-6) uses alternative UTM 1-METER EASTING (FF342-1).</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]) return xsn:or3(  xsn:not3(  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterEasting))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/Utm1MeterEasting/Utm1MeterEasting))  ),  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/UtmGridZone))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/LiaisonLocationData/UtmGridZone/MgrsUtmGridZoneAnd100KmSquare))))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5..6S],A[13] P (([5..6S],A[6] @) | ([5..6S],A[15] @))</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>PNT (Set 13) in the Segment which can start with UNT-NUID (Sets 5-6) is prohibited if NUID (Set 6) in the same Segment which can start with UNT-NUID (Sets 5-6) occurs or NFSLOC (Set 15) in the same Segment which can start with UNT-NUID (Sets 5-6) occurs.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]) return xsn:or3(  xsn:not3(  xsn:or3(  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/NavalSurfaceFireUnitIdentifierInformation) != 0 ,  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/NavalFireSupportLocation) != 0 ) ),  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/NumberedUniversalTransverseMercatorCoordinatePoint) = 0  ))</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[5..6S],A[15] RP ([5..6S],A[6] @)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>NFSLOC (Set 15) in the Segment which can start with UNT-NUID (Sets 5-6) is required if NUID (Set 6) in the same Segment which can start with UNT-NUID (Sets 5-6) occurs otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]))) then 'null' else xsn:and3( for $A in 1 to count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation]) return for $cond in if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/NavalSurfaceFireUnitIdentifierInformation) != 0  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/NavalFireSupportLocation) != 0  else  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/FireUnitSegment[UnitDesignationData or NavalSurfaceFireUnitIdentifierInformation][ $A]/NavalFireSupportLocation) = 0 )</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[19] RP ([3]F10 EQ /CONFIDENTIAL/ | /SECRET/ | /TOP SECRET/ | /RESTRICTED/ | /NATO RESTRICTED/ | /NATO CONFIDENTIAL/ | /NATO SECRET/ | /NATO SECRET-SAVATE/ | /NATO SECRET-AVICULA/ | /COSMIC TOP SECRET/ | /COSMIC TOP SECRET-BOHEMIA/ | /COSMIC TOP SECRET-BALK/ | /COSMIC TOP SECRET ATOMAL/ | /NATO SECRET ATOMAL/ | /NATO CONFIDENTIAL ATOMAL/)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>DECL (Set 19) is required if Field 10 in MSGID (SET 3) lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL" otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) and not( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*))) then 'null' else xsn:or3(  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "CONFIDENTIAL",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "SECRET",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "TOP SECRET",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "RESTRICTED",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO RESTRICTED",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-SAVATE",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET-AVICULA",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BOHEMIA",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET-BALK",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "COSMIC TOP SECRET ATOMAL",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO SECRET ATOMAL",  string( if ( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*)) then string-join( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*/*,"") else string( /*:AmmunitionFireUnitDeploymentCommand/MessageIdentifier/MessageSecurityClassification/*)) eq "NATO CONFIDENTIAL ATOMAL")  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  count( /*:AmmunitionFireUnitDeploymentCommand/MessageDowngradingOrDeclassificationData) != 0  else  count( /*:AmmunitionFireUnitDeploymentCommand/MessageDowngradingOrDeclassificationData) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <MtfStructuralRelationship>
    <MtfStructuralRelationshipRule>[19]F2 RP ([19]F1 = FF679-4)</MtfStructuralRelationshipRule>
    <MtfStructuralRelationshipExplanation>Field 2 in DECL (Set 19) is required if Field 1 in DECL (Set 19) uses alternative ORIGINAL CLASSIFICATION AUTHORITY (FF679-4) otherwise it is prohibited.</MtfStructuralRelationshipExplanation>
    <MtfStructuralRelationshipXmlSnRule />
    <MtfStructuralRelationshipXsnRule>for $cond in if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageDowngradingOrDeclassificationData/SourceForClassification))) then 'null' else xsn:or3(  exists( /*:AmmunitionFireUnitDeploymentCommand/MessageDowngradingOrDeclassificationData/SourceForClassification/OriginalClassificationAuthority))  return if ( $cond instance of xs:string) then 'null' else if ( $cond) then  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/MessageDowngradingOrDeclassificationData/ReasonForClassification) != 0  else  if ( not( exists( /*:AmmunitionFireUnitDeploymentCommand/MessageDowngradingOrDeclassificationData))) then 'null' else  count( /*:AmmunitionFireUnitDeploymentCommand/MessageDowngradingOrDeclassificationData/ReasonForClassification) = 0</MtfStructuralRelationshipXsnRule>
   </MtfStructuralRelationship>
   <VersionIndicator>B.1.01.11</VersionIndicator>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence><xsd:choice minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:appinfo>
   <AlternativeType>Mutually Exclusive, None Required</AlternativeType>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:element name="ExerciseIdentification" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The EXER set provides the designated code name or nickname, if the message supports an exercise.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>EXERCISE IDENTIFICATION</SetFormatPositionName>
    <SetFormatPositionNumber>1</SetFormatPositionNumber>
    <SetFormatPositionConcept>The EXER set provides the designated code name or nickname, if the message supports an exercise.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:ExerciseIdentificationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="1" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="OperationIdentificationData" minOccurs="0" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The OPER set provides the designated code name or nickname, if the message supports an operation.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>OPERATION IDENTIFICATION DATA</SetFormatPositionName>
    <SetFormatPositionNumber>2</SetFormatPositionNumber>
    <SetFormatPositionConcept>The OPER set provides the designated code name or nickname, if the message supports an operation.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:OperationIdentificationDataType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="2" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
</xsd:choice>

<xsd:element name="MessageIdentifier" minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The MSGID set provides the message identification and originator.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE IDENTIFIER</SetFormatPositionName>
   <SetFormatPositionNumber>3</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MSGID set provides the message identification and originator.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Mandatory</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageIdentifierType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="3" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="FirePlanDesignation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The FPN set identifies the fire plan.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>FIRE PLAN DESIGNATION</SetFormatPositionName>
   <SetFormatPositionNumber>4</SetFormatPositionNumber>
   <SetFormatPositionConcept>The FPN set identifies the fire plan.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:FirePlanDesignationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="4" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="FireUnitSegment" minOccurs="0" maxOccurs="unbounded">
 <xsd:annotation>
  <xsd:documentation>The sets UNT or NUID through SRMK form an OPERATIONALLY DETERMINED SEGMENT to report multiple fire units.</xsd:documentation>
  <xsd:appinfo>
   <SegmentStructureName>FIRE UNIT SEGMENT</SegmentStructureName>
   <SegmentStructureConcept />
   <SegmentStructureUseDescription>The sets UNT or NUID through SRMK form an OPERATIONALLY DETERMINED SEGMENT to report multiple fire units.</SegmentStructureUseDescription>
   <InitialSetFormatPosition>5</InitialSetFormatPosition>
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>unbounded</Repeatability>
   <VersionIndicator />
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="1" maxOccurs="1">
 <xsd:annotation>
  <xsd:appinfo>
   <AlternativeType>Mutually Exclusive, One Required</AlternativeType>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:element name="UnitDesignationData" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The UNT set identifies the fire units.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>UNIT DESIGNATION DATA</SetFormatPositionName>
    <SetFormatPositionNumber>5</SetFormatPositionNumber>
    <SetFormatPositionConcept>The UNT set identifies the fire units.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription>Field 3 of the UNT set is OPERATIONALLY DETERMINED in the AFU.DCMD message if the UNT set is used.
Fields 4 and 5 of the UNT set are REQUIRED if the UNT set is used.</SetFormatPositionUseDescription>
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:UnitDesignationDataType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="5" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
 <xsd:element name="NavalSurfaceFireUnitIdentifierInformation" minOccurs="1" maxOccurs="1">
  <xsd:annotation>
   <xsd:documentation>The NUID set identifies naval fire units.</xsd:documentation>
   <xsd:appinfo>
    <SetFormatPositionName>NAVAL SURFACE FIRE UNIT IDENTIFIER INFORMATION</SetFormatPositionName>
    <SetFormatPositionNumber>6</SetFormatPositionNumber>
    <SetFormatPositionConcept>The NUID set identifies naval fire units.</SetFormatPositionConcept>
    <SetFormatPositionUseDescription />
    <OccurrenceCategory>Mandatory</OccurrenceCategory>
    <Repeatability>1</Repeatability>
   </xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType>
   <xsd:complexContent>
    <xsd:extension base="s:NavalSurfaceFireUnitIdentifierInformationType">
     <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="6" />
     <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
    </xsd:extension>
   </xsd:complexContent>
  </xsd:complexType>
 </xsd:element>
</xsd:choice>

<xsd:element name="LiaisonLocationData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The LSNLOC set provides the liaison location.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>LIAISON LOCATION DATA</SetFormatPositionName>
   <SetFormatPositionNumber>7</SetFormatPositionNumber>
   <SetFormatPositionConcept>The LSNLOC set provides the liaison location.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:LiaisonLocationDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="7" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="LiaisonDayTimeGroupData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The LSNDTG set provides the liaison date-time group.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>LIAISON DAY TIME GROUP DATA</SetFormatPositionName>
   <SetFormatPositionNumber>8</SetFormatPositionNumber>
   <SetFormatPositionConcept>The LSNDTG set provides the liaison date-time group.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:LiaisonDayTimeGroupDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="8" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="FireSupportUnitMissionType" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The FUMSN set provides the fire support unit mission type.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>FIRE SUPPORT UNIT MISSION TYPE</SetFormatPositionName>
   <SetFormatPositionNumber>9</SetFormatPositionNumber>
   <SetFormatPositionConcept>The FUMSN set provides the fire support unit mission type.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:FireSupportUnitMissionTypeType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="9" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="TimeMissionChangesData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The MSNDTG set provides the time of the mission assignment.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>TIME MISSION CHANGES DATA</SetFormatPositionName>
   <SetFormatPositionNumber>10</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MSNDTG set provides the time of the mission assignment.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:TimeMissionChangesDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="10" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="UnitSupported" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The FSP set identifies the unit being supported.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>UNIT SUPPORTED</SetFormatPositionName>
   <SetFormatPositionNumber>11</SetFormatPositionNumber>
   <SetFormatPositionConcept>The FSP set identifies the unit being supported.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:UnitSupportedType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="11" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="DesignatorsOfReinforcedUnits" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The UNR set provides the identifiers of the units being reinforced.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>DESIGNATORS OF REINFORCED UNITS</SetFormatPositionName>
   <SetFormatPositionNumber>12</SetFormatPositionNumber>
   <SetFormatPositionConcept>The UNR set provides the identifiers of the units being reinforced.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:DesignatorsOfReinforcedUnitsType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="12" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="NumberedUniversalTransverseMercatorCoordinatePoint" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The PNT set designates the battalion/battery position area.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>NUMBERED UNIVERSAL TRANSVERSE MERCATOR COORDINATE POINT</SetFormatPositionName>
   <SetFormatPositionNumber>13</SetFormatPositionNumber>
   <SetFormatPositionConcept>The PNT set designates the battalion/battery position area.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The PNT set is PROHIBITED if the NUID or NFSLOC set is used.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:NumberedUniversalTransverseMercatorCoordinatePointType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="13" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="GridZoneData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The GZE set provides the grid zone data for the battalion/battery position reported in the PNT set.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>GRID ZONE DATA</SetFormatPositionName>
   <SetFormatPositionNumber>14</SetFormatPositionNumber>
   <SetFormatPositionConcept>The GZE set provides the grid zone data for the battalion/battery position reported in the PNT set.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:GridZoneDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="14" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="NavalFireSupportLocation" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The NFSLOC set reports the naval unit fire support location.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>NAVAL FIRE SUPPORT LOCATION</SetFormatPositionName>
   <SetFormatPositionNumber>15</SetFormatPositionNumber>
   <SetFormatPositionConcept>The NFSLOC set reports the naval unit fire support location.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The NFSLOC set is REQUIRED if the NUID set is used, otherwise the NFSLOC set is PROHIBITED.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:NavalFireSupportLocationType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="15" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="AzimuthOfFireUnit" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The AZF set reports the azimuth of fire.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>AZIMUTH OF FIRE UNIT</SetFormatPositionName>
   <SetFormatPositionNumber>16</SetFormatPositionNumber>
   <SetFormatPositionConcept>The AZF set reports the azimuth of fire.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:AzimuthOfFireUnitType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="16" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="MovementDateTimeData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The MVTIM set reports the movement time of fire units.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MOVEMENT DATE TIME DATA</SetFormatPositionName>
   <SetFormatPositionNumber>17</SetFormatPositionNumber>
   <SetFormatPositionConcept>The MVTIM set reports the movement time of fire units.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MovementDateTimeDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="17" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>

<xsd:element name="SpecialRemarks" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The SRMK set provides additional plain text remarks about the fire unit deployment.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>SPECIAL REMARKS</SetFormatPositionName>
   <SetFormatPositionNumber>18</SetFormatPositionNumber>
   <SetFormatPositionConcept>The SRMK set provides additional plain text remarks about the fire unit deployment.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription />
   <OccurrenceCategory>Operationally Determined</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:SpecialRemarksType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="18" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="segSeq" type="xsd:unsignedShort" fixed="5" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element>

<xsd:element name="Remarks" minOccurs="0" maxOccurs="1">
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:RemarksType">
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element>
<xsd:element name="MessageDowngradingOrDeclassificationData" minOccurs="0" maxOccurs="1">
 <xsd:annotation>
  <xsd:documentation>The DECL set provides declassification or downgrading instructions, if the message is classified.</xsd:documentation>
  <xsd:appinfo>
   <SetFormatPositionName>MESSAGE DOWNGRADING OR DECLASSIFICATION DATA</SetFormatPositionName>
   <SetFormatPositionNumber>19</SetFormatPositionNumber>
   <SetFormatPositionConcept>The DECL set provides declassification or downgrading instructions, if the message is classified.</SetFormatPositionConcept>
   <SetFormatPositionUseDescription>The DECL set is REQUIRED if Field 10 in the MSGID set lexicographically equals "CONFIDENTIAL" or "SECRET" or "TOP SECRET" or "RESTRICTED" or "NATO RESTRICTED" or "NATO CONFIDENTIAL" or "NATO SECRET" or "NATO SECRET-SAVATE" or "NATO SECRET-AVICULA" or "COSMIC TOP SECRET" or "COSMIC TOP SECRET-BOHEMIA" or "COSMIC TOP SECRET-BALK" or "COSMIC TOP SECRET ATOMAL" or "NATO SECRET ATOMAL" or "NATO CONFIDENTIAL ATOMAL", otherwise the DECL set is PROHIBITED.</SetFormatPositionUseDescription>
   <OccurrenceCategory>Conditional</OccurrenceCategory>
   <Repeatability>1</Repeatability>
  </xsd:appinfo>
 </xsd:annotation>
 <xsd:complexType>
  <xsd:complexContent>
   <xsd:extension base="s:MessageDowngradingOrDeclassificationDataType">
    <xsd:attribute name="setSeq" type="xsd:unsignedShort" fixed="19" />
    <xsd:attributeGroup ref="ism:SecurityAttributesGroup" />
   </xsd:extension>
  </xsd:complexContent>
 </xsd:complexType>
</xsd:element></xsd:sequence>
<xsd:attribute name="mtfid" type="xsd:string" fixed="AFU.DCMD" /><xsd:attributeGroup ref="ism:SecurityAttributesGroup" /></xsd:complexType>
</xsd:element></xsd:schema>